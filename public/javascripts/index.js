// Generated by CoffeeScript 1.3.3
(function() {
  var FriendCheck, Index, Register, SignIn, Utility, ind,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Utility = (function() {

    function Utility() {}

    Utility.ajaxOptions = {
      url: "/",
      type: "POST",
      dataType: "json",
      contentType: "application/json; charset=UTF-8",
      success: function() {},
      error: function() {}
    };

    return Utility;

  })();

  SignIn = (function() {

    function SignIn() {
      this.error = __bind(this.error, this);

      this.success = __bind(this.success, this);

      this.submit = __bind(this.submit, this);
      this.userName = $("#userName");
      this.passWord = $("#passWord");
      this.btnSignIn = $("#btnSignIn");
      this.signInErr = $("#signInErr");
      this.btnSignIn.on("click", this.submit);
    }

    SignIn.prototype.submit = function() {
      var data;
      this.signInErr.hide();
      data = {
        username: this.userName.val(),
        password: this.passWord.val()
      };
      Utility.ajaxOptions.url = "/signin";
      Utility.ajaxOptions.success = this.success;
      Utility.ajaxOptions.error = this.error;
      Utility.ajaxOptions.data = JSON.stringify(data);
      $.ajax(Utility.ajaxOptions);
    };

    SignIn.prototype.success = function() {
      window.location.href = "/dashboard";
    };

    SignIn.prototype.error = function() {
      this.signInErr.show();
    };

    return SignIn;

  })();

  Register = (function() {

    function Register() {
      this.error = __bind(this.error, this);

      this.success = __bind(this.success, this);

      this.checkPass = __bind(this.checkPass, this);

      this.submit = __bind(this.submit, this);
      this.regName = $("#regName");
      this.regEmail = $("#regEmail");
      this.regPass = $("#regPass");
      this.regConfirm = $("#regConfirm");
      this.btnRegister = $("#btnRegister");
      this.passErr = $("#passErr");
      this.regErr = $("#regErr");
      this.btnRegister.on("click", this.submit);
      this.regConfirm.on("keyup", this.checkPass);
    }

    Register.prototype.submit = function() {
      var data;
      this.regErr.hide();
      data = {
        name: this.regName.val(),
        email: this.regEmail.val(),
        pass: this.regPass.val()
      };
      Utility.ajaxOptions.url = "/register";
      Utility.ajaxOptions.success = this.success;
      Utility.ajaxOptions.error = this.error;
      Utility.ajaxOptions.data = JSON.stringify(data);
      $.ajax(Utility.ajaxOptions);
    };

    Register.prototype.checkPass = function() {
      var confirm, pass;
      pass = this.regPass.val();
      confirm = this.regConfirm.val();
      if (pass === confirm) {
        this.passErr.hide();
        return;
      } else {
        this.passErr.show();
      }
    };

    Register.prototype.success = function() {
      window.location.href = "/dashboard";
    };

    Register.prototype.error = function() {
      this.regErr.show();
    };

    return Register;

  })();

  FriendCheck = (function() {

    function FriendCheck(btn, email, redirect) {
      this.checkFacebook = __bind(this.checkFacebook, this);

      this.submit = __bind(this.submit, this);
      this.email = $(email);
      this.btnCheckFriends = $(btn);
      this.btnCheckFriends.on("click", this.submit);
      $(".jqFriend").on("click", this.submitFriend);
      $("#btnFindFb").on("click", this.checkFacebook);
      this.redirect = redirect;
    }

    FriendCheck.prototype.submit = function() {
      var data;
      data = {
        email: this.email.val()
      };
      window.location.href = "/friendlist/" + data.email;
    };

    FriendCheck.prototype.submitFriend = function() {
      var data, friend, friendId, getFriendError, getFriendSuccess;
      friend = $(this).siblings('.friendId');
      friendId = friend.val();
      data = {
        friend: friendId
      };
      getFriendSuccess = function(response) {
        friend.parent().append('<p>' + response + '</p>');
      };
      getFriendError = function() {};
      Utility.ajaxOptions.url = "/getfriendlist";
      Utility.ajaxOptions.success = getFriendSuccess;
      Utility.ajaxOptions.error = getFriendError;
      Utility.ajaxOptions.data = JSON.stringify(data);
      $.ajax(Utility.ajaxOptions);
    };

    FriendCheck.prototype.checkFacebook = function() {
      FB.api("/me/friends", function(response) {
        var data;
        if (!response || response.error) {

        } else {
          data = {
            friends: response.data,
            redirect: this.redirect
          };
          Utility.ajaxOptions.url = "/fbfriendlist";
          Utility.ajaxOptions.success = function(response) {};
          Utility.ajaxOptions.error = function(response) {};
          Utility.ajaxOptions.data = JSON.stringify(data);
          $.ajax(Utility.ajaxOptions);
        }
      });
    };

    return FriendCheck;

  })();

  Index = (function() {

    function Index() {
      this.sign = new SignIn();
      this.ref = new Register();
      this.friendCheck = new FriendCheck("#btnCheckFriends", "#email", true);
    }

    return Index;

  })();

  ind = new Index();

}).call(this);
