{"ts":1349199825782,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * GET home page.\n */\n \n //var http = require('http');\n var http = require('../app');\n var mongo = require('mongoskin');\n var conn = mongo.db('mongodb://public:public@alex.mongohq.com:10090/HolidayReminder');\n //var util = require('util');\n \n var OAuth= require('oauth').OAuth;\n var OperationHelper = require('apac').OperationHelper;\n\n var opHelper = new OperationHelper({\n     awsId:     'AKIAIAWGTQ3Z7N5WUHPQ',\n     awsSecret: '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',\n     assocId:   ' aztag-20'\n });\n\nvar oa = new OAuth(\n    \"https://api.twitter.com/oauth/request_token\",\n\t\"https://api.twitter.com/oauth/access_token\",\n\t\"YourConsumerKeyProvidedByTwitter\",\n\t\"YourConsumerSecretProvidedByTwitter\",\n\t\"1.0\",\n\t\"http://yourdomain/auth/twitter/callback\",\n\t\"HMAC-SHA1\"\n);\n\nexports.index = function(req, res){\n  res.render('index');\n};\n\nexports.dashboard = function(req, res){\n    var itemList = []\n        , friendList = []\n        , userId;\n    if(req.body.friends){\n        friendList = req.body.friends;\n    }\n    if(req.session.auth){\n        userId = req.session.user._id.toString();\n        conn.collection('items').find({userId: userId}).toArray(function(err, list){\n            itemList = list;\n            conn.collection('friends').find({userId: userId}).toArray(function(err, friends){\n                if(friends.length){\n                    friends.forEach(function(friend){ friendList.push(friend); });\n                    //console.log(friendList[0]);\n                }\n                 conn.collection('lists').find({userId: userId}).toArray(function(err, lists){\n                    if(!err && lists){\n                        res.render('dashboard', { username: req.session.user.username, myList: itemList, friendList: friendList, shoppingLists: lists });\n                    } else {\n                        //err\n                    }\n                 });\n            });            \n        });\n    } else {\n        res.render('dashboard', { username: \"Your\", myList: itemList, friendList: friendList });\n    }\n};\n\nexports.addListItem = function(req, res){\n    var userId = req.session.user._id;\n    var name = req.body.name;\n    var desc = req.body.desc;\n    var link = req.body.link;\n    var item = {\n      name: name,\n      desc: desc,\n      link: link\n    };\n    conn.collection('items').save({userId: userId, item: item});\n};\n\nexports.friendlist = function(req, res){\n    var email = req.params.email\n        , existingUser\n        , id\n        , list = []\n        , auth = false\n        , friend = \"\";\n    if(req.session.auth){\n        auth = true;\n        friend = email;\n    }\n    conn.collection('users').findOne({email: email}, function(err, user){\n        existingUser = user;\n        if(existingUser){\n            id = existingUser._id;\n            conn.collection('items').find({userId: id.toString()}).toArray(function(err, userlist){\n                res.render('friendlist', { friendList: userlist, auth: auth, friend: friend });\n            });            \n        }else{\n            res.render('friendlist', { friendList: list, auth: auth, friend: friend });\n        }\n    });\n};\n\nexports.getFriendList = function(req, res){\n    var list, existingUser;\n    //var email = req.body.email\n    var friendId = req.body.friend.toString();\n    \n    conn.collection('friends').findOne({_id:  conn.ObjectID.createFromHexString(friendId)}, function(err, friend){\n        if(!err && friend){\n            conn.collection('users').findOne({_id: conn.ObjectID.createFromHexString(friend.friendId.toString())}, function(err, user){\n                existingUser = user;\n                if(!err && existingUser){\n                    conn.collection('items').find({userId: existingUser._id.toString()}).toArray(function(err, userList){\n                        if(!err && userList){\n                            list = userList;\n                            res.json(list);\n                        } else {\n                            res.json(['FAIL']);\n                        }\n                    });                    \n                } else {\n                    res.json(['FAIL']);\n                }\n            });\n        } else {\n            res.json(['FAIL']);\n        }\n    });     \n};\n\nexports.fbfriendlist = function(req, res){\n    var fbIds = req.body.friends;\n    var redirect = req.body.redirect;\n    conn.collection('users').find({fbId: {$in: fbIds}}).toArray(function(err, users){\n        if(!err && users){\n            req.session.friends = users;\n            if(redirect){\n                req.redirect('/friends');\n            } else {\n                res.json([users]);\n            }\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.twitterfriendlist = function(req, res){\n    if(req.session.oauth && req.session.user){\n        oa.getProtectedResource(\"https://api.twitter.com/1.1/friends/ids.json?cursor=-1&user_id=\" + req.session.user.twitId + \" \", \"GET\", req.session.oauth.token, req.session.oauth.token_secret, function (error, data, response) {\n              //util.puts(data);\n              res.json([data]);\n        });\n    }\n};\n\nexports.addFriendList = function(req, res){\n    var friend = req.body.friend;\n    var userId = req.session.user._id.toString();\n    conn.collection('users').findOne({email: friend}, function(err, user){\n        if(!err && user){\n            conn.collection('friends').save({userId: userId, friendId: user._id, friendName: user.username, friendEmail: user.email}, function(err, rec){\n                if(err){\n                    res.json([\"FAIL\"]);\n                } else {\n                    res.json([\"OK\"]);\n                }\n            });\n        } else {\n            res.json([\"FAIL\"]);\n        }\n    });\n};\n\nexports.markitempurchased = function(req, res){\n    var itemId = req.body.itemId.toString();\n    conn.collection('items').update({_id: conn.ObjectID.createFromHexString(itemId)}, {$set: {purchased:true}}, function(err, count){\n        if(err){\n            res.json([\"FAIL\"]);\n        } else {\n            res.json([\"OK\"]);\n        }\n    });\n};\n\nexports.createlist = function(req, res){\n    var listName = req.body.listName;\n    conn.collection('lists').save({name: listName, userId: req.session.user._id, items: []}, function(err, list){\n        if(!err && list){\n            res.json(list._id);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.getshoppinglist = function(req, res){\n    var listId = req.body.listId.toString();\n    var ids = [];\n    conn.collection('lists').findOne({_id: conn.ObjectID.createFromHexString(listId)}, function(err, list){\n        list.items.forEach(function(item){ ids.push(conn.ObjectID.createFromHexString(item)); });\n        conn.collection('items').find({_id: {$in: ids}}).toArray(function(err, items){\n            if(!err && items){\n                res.json(items);\n            } else {\n                res.json(['FAIL']);\n            }\n        });\n        \n    });\n};\n\nexports.posttoshoppinglist = function(req, res){\n    var item = req.body.itemId;\n    var listId = req.body.listId.toString();\n    conn.collection('lists').update({_id: conn.ObjectID.createFromHexString(listId)}, {$push: {items: item}}, function(err, list){\n        if(!err && list){\n            res.json(['OK']);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.register = function(req, res){\n    var existingUser;\n    var username = req.body.name;\n    var email = req.body.email;\n    var pass = req.body.pass;\n    var data = {\n      username: username,\n      email: email,\n      pass: pass\n    };\n    \n    conn.collection('users').findOne({email: data.email}, function(err, user){ \n        existingUser = user;\n        if(!existingUser){\n            conn.collection('users').save(data, function(err, user){\n                if(!err && user){\n                    req.session.auth = true;\n                    req.session.user = user;\n                    req.session.username = data.username;\n                    req.session.userId = existingUser._id;\n                    res.json(['OK']);\n                } else {\n                    res.json(['FAIL']);\n                }\n            });            \n        }\n        res.json(['FAIL']);\n    });    \n    //res.json(['FAIL']);\n};\n\nexports.signin = function(req, res){\n    var existingUser;\n    var username = req.body.username;\n    var password = req.body.password;\n    if(req.form.isValid){\n        //todo: this is wrong, all assignments should be done in callback function\n        conn.collection('users').findOne({username: username, pass: password}, function(err, user){ \n                existingUser = user;\n                if(existingUser){\n                    req.session.user = user;\n                    req.session.username = username;\n                    req.session.userId = existingUser._id;\n                    req.session.auth = true;\n                    res.json(['OK']);\n                    return;\n                }\n                res.json(['FAIL']);\n                //console.log(user);\n        });\n    } else {\n        res.json(['FAIL']);\n    }\n};\n\nexports.fbsignin = function(req, res){\n    var username = req.body.username;\n    var password = req.body.password;\n    var email = req.body.email;\n    var friends = req.body.friends;\n    var data = {\n      username: username,\n      email: email,\n      pass: password\n    };\n    conn.collection('users').findOne({email: email}, function(err, user){\n        if(!err){\n            if(user){\n                req.session.user = user;\n                conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                    if(!err && users){\n                        req.session.friends = users;\n                        req.session.auth = true;\n                        res.json([\"OK\"]);\n                    } else {\n                        //res.json(['FAIL']);\n                    }\n                });\n            } else {\n                conn.collection('users').save(data, function(err, user){\n                    if(!err && user){\n                        req.session.user = user;\n                        conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                            if(!err && users){\n                                req.session.friends = users;\n                                res.json([\"OK\"]);\n                            } else {\n                                //res.json(['FAIL']);\n                            }\n                        });\n                    } else {\n                        //err saving\n                    }\n                });\n            }\n        } else {\n            //err on lookup\n        }\n    });\n};\n\nexports.twittersignin = function(req, res){\n    oa.getOAuthRequestToken(function(error, oauth_token, oauth_token_secret, results){\n\tif (error) {\n\t\t//console.log(error);\n\t\t//res.send(\"yeah no. didn't work.\")\n\t}\n\telse {\n\t\treq.session.oauth = {};\n\t\treq.session.oauth.token = oauth_token;\n\t\t//console.log('oauth.token: ' + req.session.oauth.token);\n\t\treq.session.oauth.token_secret = oauth_token_secret;\n\t\t//console.log('oauth.token_secret: ' + req.session.oauth.token_secret);\n\t\tres.redirect('https://twitter.com/oauth/authenticate?oauth_token='+oauth_token);\n    }\n\t});\n};\n\nexports.twitterdashboard = function(req, res){\n    if (req.session.oauth) {\n\treq.session.oauth.verifier = req.query.oauth_verifier;\n\tvar oauth = req.session.oauth;\n\n\toa.getOAuthAccessToken(oauth.token,oauth.token_secret,oauth.verifier, \n\tfunction(error, oauth_access_token, oauth_access_token_secret, results){\n\t\tif (error){\n\t\t\t//console.log(error);\n\t\t\t//res.send(\"yeah something broke.\");\n\t\t} else {\n\t\t\treq.session.oauth.access_token = oauth_access_token;\n\t\t\treq.session.oauth.access_token_secret = oauth_access_token_secret;\n\t\t\t//console.log(results);\n\t\t\t//res.send(\"worked. nice one.\");\n\t\t}\n\t}\n\t);\n\t} else {\n        //render error\n\t}\n};\n\nexports.searchamazon = function(req, res){\n    var keywords = req.body.keywords;\n    opHelper.execute('ItemSearch', {\n    'SearchIndex': 'Blended',\n    'Keywords': keywords,\n    'ResponseGroup': 'ItemAttributes,Offers'\n    }, function(error, results) {\n        if (error) { console.log('Error: ' + error + \"\\n\"); }\n        //console.log(\"Results:\\n\" + util.inspect(results) + \"\\n\");\n        res.json(results);\n    });\n};\n\nexports.searchretailigence = function(req, res){\n    var output = \"\";\n    var location, range, keywords;\n    var latitude = req.body.latitude;\n    var longitude = req.body.longitude;\n    keywords = req.body.keywords;\n    location = latitude.toString() + \",\" + longitude.toString();\n    range = 50;\n    var retailigence = \"apitest.retailigence.com\"; \n    var requestorid = \"3e52c040-067f-11e2-892e-0800200c9a66\";\n    var path=\"/v1.2/products?format=json&apikey=S5t304750JKlOlfE6rCWRjveavEPuBzF&requestorid={0}\";\n    path = path.replace(\"{0}\", requestorid);\n    var query=\"&location={0}&Range={1}&keywords={2}\";\n    query = query.replace(\"{0}\", location).replace(\"{1}\", range).replace(\"{2}\", keywords);\n    var options = {\n          host: retailigence,\n          path: path + query,\n          method: 'GET'\n        };\n    console.log(options);\n    var retailreq = http.server.request(options, function(response){\n        //console.log(\"res \" + res);\n        response.setEncoding('utf8');\n        response.on('data', function (chunk) {\n            //res.json(chunk);\n            output += chunk;\n        });\n        \n        response.on('end', function(){\n            var data = JSON.parse(output);\n            res.json(data); \n        });\n        //response.end();\n    });\n    \n    retailreq.on('error', function(e) {\n        console.log('problem with request: ' + e.message);\n    });\n    \n    retailreq.write('');\n    retailreq.end();\n};"]],"start1":0,"start2":0,"length1":0,"length2":13790}]],"length":13790}
{"contributors":[],"silentsave":false,"ts":1349205226614,"patch":[[{"diffs":[[0,"on.userId = "],[-1,"existingU"],[1,"u"],[0,"ser._id;\n   "]],"start1":8008,"start2":8008,"length1":33,"length2":25}]],"length":13782,"saved":false}
{"ts":1349205963540,"patch":[[{"diffs":[[0,"   res.json("],[-1,"['FAIL']"],[1,"{errors: req.form.errors}"],[0,");\n         "]],"start1":8974,"start2":8974,"length1":32,"length2":49}]],"length":13799,"saved":false}
{"ts":1349206034850,"patch":[[{"diffs":[[0,"son("],[-1,"{errors: req.form.errors}"],[1,"['FAIL']"],[0,");\n "]],"start1":8982,"start2":8982,"length1":33,"length2":16},{"diffs":[[0,"   res.json("],[-1,"['FAIL']"],[1,"{errors: req.form.errors}"],[0,");\n    }\n};\n"]],"start1":9064,"start2":9064,"length1":32,"length2":49}]],"length":13799,"saved":false}
{"ts":1349206123475,"patch":[[{"diffs":[[0,"s.re"],[-1,"nder('dashboard', { username: \"Your\", myList: itemList, friendList: friendList }"],[1,"direct(\"/\""],[0,");\n "]],"start1":1938,"start2":1938,"length1":88,"length2":18}]],"length":13729,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349227269512,"patch":[[{"diffs":[[0,"em: item});\n};\n\n"],[1,"exports.addlist = function(req, res){\n    var link = req.body.link;\n    var itemId = req.body.itemId;\n};\n\n"],[0,"exports.friendli"]],"start1":2266,"start2":2266,"length1":32,"length2":138}]],"length":13835,"saved":false}
{"ts":1349227378740,"patch":[[{"diffs":[[0,"itemId;\n"],[1,"    conn.collection('items').findOne({itemId: itemId}, function(err, item){\n        if(item && !err){\n            \n        } else {\n            res.json(['FAIL']);\n        }\n    });\n"],[0,"};\n\nexpo"]],"start1":2376,"start2":2376,"length1":16,"length2":198}]],"length":14017,"saved":false}
{"ts":1349227863985,"patch":[[{"diffs":[[0,"items')."],[-1,"findOn"],[1,"updat"],[0,"e({itemI"]],"start1":2405,"start2":2405,"length1":22,"length2":21},{"diffs":[[0,"itemId},"],[1," {link: link},"],[0," functio"]],"start1":2429,"start2":2429,"length1":16,"length2":30}]],"length":14030,"saved":false}
{"ts":1349227873828,"patch":[[{"diffs":[[0,"r){\n            "],[1,"res.json(['OK'])"],[0,"\n        } else "]],"start1":2495,"start2":2495,"length1":32,"length2":48}]],"length":14046,"saved":false}
{"ts":1349227890763,"patch":[[{"diffs":[[0,"(['OK'])"],[1,";"],[0,"\n       "]],"start1":2519,"start2":2519,"length1":16,"length2":17}]],"length":14047,"saved":false}
{"ts":1349227914878,"patch":[[{"diffs":[[0,"update({"],[1,"_"],[0,"i"],[-1,"temI"],[0,"d: itemI"]],"start1":2413,"start2":2413,"length1":21,"length2":18}]],"length":14044,"saved":false}
{"ts":1349227942314,"patch":[[{"diffs":[[0,"e({_id: "],[1,"conn.ObjectID.createFromHexString("],[0,"itemId"],[1,")"],[0,"}, {link"]],"start1":2418,"start2":2418,"length1":22,"length2":57}]],"length":14079,"saved":false}
{"ts":1349227958904,"patch":[[{"diffs":[[0,"mId)}, {"],[1,"item."],[0,"link: li"]],"start1":2463,"start2":2463,"length1":16,"length2":21}]],"length":14084,"saved":false}
{"ts":1349228179400,"patch":[[{"diffs":[[0,"mId)}, {"],[1,"\""],[0,"item.lin"]],"start1":2463,"start2":2463,"length1":16,"length2":17},{"diffs":[[0," {\"item.link"],[1,"\""],[0,": link}, fun"]],"start1":2469,"start2":2469,"length1":24,"length2":25}]],"length":14086,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349228487837,"patch":[[{"diffs":[[0,"ts.addli"],[-1,"st"],[1,"nk"],[0," = funct"]],"start1":2287,"start2":2287,"length1":18,"length2":18}]],"length":14086,"saved":false}
{"ts":1349228757976,"patch":[[{"diffs":[[0,"temId)},"],[1,"{$set:"],[0," {\"item."]],"start1":2461,"start2":2461,"length1":16,"length2":22},{"diffs":[[0,"\": link}"],[1,"}"],[0,", functi"]],"start1":2487,"start2":2487,"length1":16,"length2":17}]],"length":14093,"saved":false}
{"ts":1349228762934,"patch":[[{"diffs":[[0,"emId)},{"],[1," "],[0,"$set: {\""]],"start1":2462,"start2":2462,"length1":16,"length2":17},{"diffs":[[0,"unction(err,"],[1," "],[0," item){\n    "]],"start1":2500,"start2":2500,"length1":24,"length2":25}]],"length":14095,"saved":false}
{"ts":1349228765420,"patch":[[{"diffs":[[0,"k\": link"],[1," "],[0,"}}, func"]],"start1":2487,"start2":2487,"length1":16,"length2":17},{"diffs":[[0,"item && !err"],[1," "],[0,"){\n"],[1," "],[0,"            "]],"start1":2533,"start2":2533,"length1":27,"length2":29}]],"length":14098,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349465599003,"patch":[[{"diffs":[[1,"/*\n * GET home page.\n */\n \n //var http = require('http');\n var http = require('../app');\n var mongo = require('mongoskin');\n var conn = mongo.db('mongodb://public:public@alex.mongohq.com:10090/HolidayReminder');\n //var util = require('util');\n \n var OAuth= require('oauth').OAuth;\n var OperationHelper = require('apac').OperationHelper;\n\n var opHelper = new OperationHelper({\n     awsId:     'AKIAIAWGTQ3Z7N5WUHPQ',\n     awsSecret: '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',\n     assocId:   ' aztag-20'\n });\n\nvar oa = new OAuth(\n    \"https://api.twitter.com/oauth/request_token\",\n\t\"https://api.twitter.com/oauth/access_token\",\n\t\"YourConsumerKeyProvidedByTwitter\",\n\t\"YourConsumerSecretProvidedByTwitter\",\n\t\"1.0\",\n\t\"http://yourdomain/auth/twitter/callback\",\n\t\"HMAC-SHA1\"\n);\n\nexports.index = function(req, res){\n  res.render('index');\n};\n\nexports.dashboard = function(req, res){\n    var itemList = []\n        , friendList = []\n        , userId;\n    if(req.body.friends){\n        friendList = req.body.friends;\n    }\n    if(req.session.auth){\n        userId = req.session.user._id.toString();\n        conn.collection('items').find({userId: userId}).toArray(function(err, list){\n            itemList = list;\n            conn.collection('friends').find({userId: userId}).toArray(function(err, friends){\n                if(friends.length){\n                    friends.forEach(function(friend){ friendList.push(friend); });\n                    //console.log(friendList[0]);\n                }\n                 conn.collection('lists').find({userId: userId}).toArray(function(err, lists){\n                    if(!err && lists){\n                        res.render('dashboard', { username: req.session.user.username, myList: itemList, friendList: friendList, shoppingLists: lists });\n                    } else {\n                        //err\n                    }\n                 });\n            });            \n        });\n    } else {\n        res.redirect(\"/\");\n    }\n};\n\nexports.addListItem = function(req, res){\n    var userId = req.session.user._id;\n    var name = req.body.name;\n    var desc = req.body.desc;\n    var link = req.body.link;\n    var item = {\n      name: name,\n      desc: desc,\n      link: link\n    };\n    conn.collection('items').save({userId: userId, item: item});\n};\n\nexports.addlink = function(req, res){\n    var link = req.body.link;\n    var itemId = req.body.itemId;\n    conn.collection('items').update({_id: conn.ObjectID.createFromHexString(itemId)},{ $set: {\"item.link\": link }}, function(err,  item){\n        if(item && !err ){\n             res.json(['OK']);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.friendlist = function(req, res){\n    var email = req.params.email\n        , existingUser\n        , id\n        , list = []\n        , auth = false\n        , friend = \"\";\n    if(req.session.auth){\n        auth = true;\n        friend = email;\n    }\n    conn.collection('users').findOne({email: email}, function(err, user){\n        existingUser = user;\n        if(existingUser){\n            id = existingUser._id;\n            conn.collection('items').find({userId: id.toString()}).toArray(function(err, userlist){\n                res.render('friendlist', { friendList: userlist, auth: auth, friend: friend });\n            });            \n        }else{\n            res.render('friendlist', { friendList: list, auth: auth, friend: friend });\n        }\n    });\n};\n\nexports.getFriendList = function(req, res){\n    var list, existingUser;\n    //var email = req.body.email\n    var friendId = req.body.friend.toString();\n    \n    conn.collection('friends').findOne({_id:  conn.ObjectID.createFromHexString(friendId)}, function(err, friend){\n        if(!err && friend){\n            conn.collection('users').findOne({_id: conn.ObjectID.createFromHexString(friend.friendId.toString())}, function(err, user){\n                existingUser = user;\n                if(!err && existingUser){\n                    conn.collection('items').find({userId: existingUser._id.toString()}).toArray(function(err, userList){\n                        if(!err && userList){\n                            list = userList;\n                            res.json(list);\n                        } else {\n                            res.json(['FAIL']);\n                        }\n                    });                    \n                } else {\n                    res.json(['FAIL']);\n                }\n            });\n        } else {\n            res.json(['FAIL']);\n        }\n    });     \n};\n\nexports.fbfriendlist = function(req, res){\n    var fbIds = req.body.friends;\n    var redirect = req.body.redirect;\n    conn.collection('users').find({fbId: {$in: fbIds}}).toArray(function(err, users){\n        if(!err && users){\n            req.session.friends = users;\n            if(redirect){\n                req.redirect('/friends');\n            } else {\n                res.json([users]);\n            }\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.twitterfriendlist = function(req, res){\n    if(req.session.oauth && req.session.user){\n        oa.getProtectedResource(\"https://api.twitter.com/1.1/friends/ids.json?cursor=-1&user_id=\" + req.session.user.twitId + \" \", \"GET\", req.session.oauth.token, req.session.oauth.token_secret, function (error, data, response) {\n              //util.puts(data);\n              res.json([data]);\n        });\n    }\n};\n\nexports.addFriendList = function(req, res){\n    var friend = req.body.friend;\n    var userId = req.session.user._id.toString();\n    conn.collection('users').findOne({email: friend}, function(err, user){\n        if(!err && user){\n            conn.collection('friends').save({userId: userId, friendId: user._id, friendName: user.username, friendEmail: user.email}, function(err, rec){\n                if(err){\n                    res.json([\"FAIL\"]);\n                } else {\n                    res.json([\"OK\"]);\n                }\n            });\n        } else {\n            res.json([\"FAIL\"]);\n        }\n    });\n};\n\nexports.markitempurchased = function(req, res){\n    var itemId = req.body.itemId.toString();\n    conn.collection('items').update({_id: conn.ObjectID.createFromHexString(itemId)}, {$set: {purchased:true}}, function(err, count){\n        if(err){\n            res.json([\"FAIL\"]);\n        } else {\n            res.json([\"OK\"]);\n        }\n    });\n};\n\nexports.createlist = function(req, res){\n    var listName = req.body.listName;\n    conn.collection('lists').save({name: listName, userId: req.session.user._id, items: []}, function(err, list){\n        if(!err && list){\n            res.json(list._id);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.getshoppinglist = function(req, res){\n    var listId = req.body.listId.toString();\n    var ids = [];\n    conn.collection('lists').findOne({_id: conn.ObjectID.createFromHexString(listId)}, function(err, list){\n        list.items.forEach(function(item){ ids.push(conn.ObjectID.createFromHexString(item)); });\n        conn.collection('items').find({_id: {$in: ids}}).toArray(function(err, items){\n            if(!err && items){\n                res.json(items);\n            } else {\n                res.json(['FAIL']);\n            }\n        });\n        \n    });\n};\n\nexports.posttoshoppinglist = function(req, res){\n    var item = req.body.itemId;\n    var listId = req.body.listId.toString();\n    conn.collection('lists').update({_id: conn.ObjectID.createFromHexString(listId)}, {$push: {items: item}}, function(err, list){\n        if(!err && list){\n            res.json(['OK']);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.addlistlink = function(req, res){\n    var itemId = req.body.itemId;\n    var listId = req.body.listId;\n    var link = req.body.link;\n};\n\nexports.register = function(req, res){\n    var existingUser;\n    var username = req.body.name;\n    var email = req.body.email;\n    var pass = req.body.pass;\n    var data = {\n      username: username,\n      email: email,\n      pass: pass\n    };\n    \n    conn.collection('users').findOne({email: data.email}, function(err, user){ \n        existingUser = user;\n        if(!existingUser){\n            conn.collection('users').save(data, function(err, user){\n                if(!err && user){\n                    req.session.auth = true;\n                    req.session.user = user;\n                    req.session.username = data.username;\n                    req.session.userId = user._id;\n                    res.json(['OK']);\n                } else {\n                    res.json(['FAIL']);\n                }\n            });            \n        }\n        res.json(['FAIL']);\n    });    \n    //res.json(['FAIL']);\n};\n\nexports.signin = function(req, res){\n    var existingUser;\n    var username = req.body.username;\n    var password = req.body.password;\n    if(req.form.isValid){\n        //todo: this is wrong, all assignments should be done in callback function\n        conn.collection('users').findOne({username: username, pass: password}, function(err, user){ \n                existingUser = user;\n                if(existingUser){\n                    req.session.user = user;\n                    req.session.username = username;\n                    req.session.userId = existingUser._id;\n                    req.session.auth = true;\n                    res.json(['OK']);\n                    return;\n                }\n                res.json(['FAIL']);\n                //console.log(user);\n        });\n    } else {\n        res.json({errors: req.form.errors});\n    }\n};\n\nexports.fbsignin = function(req, res){\n    var username = req.body.username;\n    var password = req.body.password;\n    var email = req.body.email;\n    var friends = req.body.friends;\n    var data = {\n      username: username,\n      email: email,\n      pass: password\n    };\n    conn.collection('users').findOne({email: email}, function(err, user){\n        if(!err){\n            if(user){\n                req.session.user = user;\n                conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                    if(!err && users){\n                        req.session.friends = users;\n                        req.session.auth = true;\n                        res.json([\"OK\"]);\n                    } else {\n                        //res.json(['FAIL']);\n                    }\n                });\n            } else {\n                conn.collection('users').save(data, function(err, user){\n                    if(!err && user){\n                        req.session.user = user;\n                        conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                            if(!err && users){\n                                req.session.friends = users;\n                                res.json([\"OK\"]);\n                            } else {\n                                //res.json(['FAIL']);\n                            }\n                        });\n                    } else {\n                        //err saving\n                    }\n                });\n            }\n        } else {\n            //err on lookup\n        }\n    });\n};\n\nexports.twittersignin = function(req, res){\n    oa.getOAuthRequestToken(function(error, oauth_token, oauth_token_secret, results){\n\tif (error) {\n\t\t//console.log(error);\n\t\t//res.send(\"yeah no. didn't work.\")\n\t}\n\telse {\n\t\treq.session.oauth = {};\n\t\treq.session.oauth.token = oauth_token;\n\t\t//console.log('oauth.token: ' + req.session.oauth.token);\n\t\treq.session.oauth.token_secret = oauth_token_secret;\n\t\t//console.log('oauth.token_secret: ' + req.session.oauth.token_secret);\n\t\tres.redirect('https://twitter.com/oauth/authenticate?oauth_token='+oauth_token);\n    }\n\t});\n};\n\nexports.twitterdashboard = function(req, res){\n    if (req.session.oauth) {\n\treq.session.oauth.verifier = req.query.oauth_verifier;\n\tvar oauth = req.session.oauth;\n\n\toa.getOAuthAccessToken(oauth.token,oauth.token_secret,oauth.verifier, \n\tfunction(error, oauth_access_token, oauth_access_token_secret, results){\n\t\tif (error){\n\t\t\t//console.log(error);\n\t\t\t//res.send(\"yeah something broke.\");\n\t\t} else {\n\t\t\treq.session.oauth.access_token = oauth_access_token;\n\t\t\treq.session.oauth.access_token_secret = oauth_access_token_secret;\n\t\t\t//console.log(results);\n\t\t\t//res.send(\"worked. nice one.\");\n\t\t}\n\t}\n\t);\n\t} else {\n        //render error\n\t}\n};\n\nexports.searchamazon = function(req, res){\n    var keywords = req.body.keywords;\n    opHelper.execute('ItemSearch', {\n    'SearchIndex': 'Blended',\n    'Keywords': keywords,\n    'ResponseGroup': 'ItemAttributes,Offers'\n    }, function(error, results) {\n        if (error) { console.log('Error: ' + error + \"\\n\"); }\n        //console.log(\"Results:\\n\" + util.inspect(results) + \"\\n\");\n        res.json(results);\n    });\n};\n\nexports.searchretailigence = function(req, res){\n    var output = \"\";\n    var location, range, keywords;\n    var latitude = req.body.latitude;\n    var longitude = req.body.longitude;\n    keywords = req.body.keywords;\n    location = latitude.toString() + \",\" + longitude.toString();\n    range = 50;\n    var retailigence = \"apitest.retailigence.com\"; \n    var requestorid = \"3e52c040-067f-11e2-892e-0800200c9a66\";\n    var path=\"/v1.2/products?format=json&apikey=S5t304750JKlOlfE6rCWRjveavEPuBzF&requestorid={0}\";\n    path = path.replace(\"{0}\", requestorid);\n    var query=\"&location={0}&Range={1}&keywords={2}\";\n    query = query.replace(\"{0}\", location).replace(\"{1}\", range).replace(\"{2}\", keywords);\n    var options = {\n          host: retailigence,\n          path: path + query,\n          method: 'GET'\n        };\n    console.log(options);\n    var retailreq = http.server.request(options, function(response){\n        //console.log(\"res \" + res);\n        response.setEncoding('utf8');\n        response.on('data', function (chunk) {\n            //res.json(chunk);\n            output += chunk;\n        });\n        \n        response.on('end', function(){\n            var data = JSON.parse(output);\n            res.json(data); \n        });\n        //response.end();\n    });\n    \n    retailreq.on('error', function(e) {\n        console.log('problem with request: ' + e.message);\n    });\n    \n    retailreq.write('');\n    retailreq.end();\n};"]],"start1":0,"start2":0,"length1":0,"length2":14242}]],"length":14242,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349465699548,"patch":[[{"diffs":[[0,"y.link;\n"],[1,"    conn.collection('lists').update({_id: conn.ObjectID.createFromHexString(listId)}, {}, function(err, list){\n        if(!err && list){\n            \n        } else {\n            res.json(['FAIL']);\n        }\n    });\n"],[0,"};\n\nexpo"]],"start1":7774,"start2":7774,"length1":16,"length2":233}]],"length":14459,"saved":false}
{"ts":1349466065901,"patch":[[{"diffs":[[0,"tId.toString();\n"],[1,"    var data = {\n        itemId: item,\n        link: \"\"\n    };\n"],[0,"    conn.collect"]],"start1":7368,"start2":7368,"length1":32,"length2":95},{"diffs":[[0,"(listId)"],[-1,"}, {"],[1,", item.id: itemId}, {$set: {\"item.link\": link }"],[0,"}, funct"]],"start1":7920,"start2":7920,"length1":20,"length2":63}]],"length":14565,"saved":false}
{"ts":1349466075924,"patch":[[{"diffs":[[0,"{items: "],[-1,"item"],[1,"data"],[0,"}}, func"]],"start1":7541,"start2":7541,"length1":20,"length2":20}]],"length":14565,"saved":false}
{"ts":1349466096419,"patch":[[{"diffs":[[0,"       i"],[-1,"temI"],[0,"d: item,"]],"start1":7402,"start2":7402,"length1":20,"length2":16}]],"length":14561,"saved":false}
{"ts":1349466125707,"patch":[[{"diffs":[[0,"ing(item"],[1,".id"],[0,")); });\n"]],"start1":6987,"start2":6987,"length1":16,"length2":19}]],"length":14564,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349466735768,"patch":[[{"diffs":[[0,"d), "],[-1,"item.id: itemId}, {$set: {\"item.link\": link }}, function(err, list){\n        if(!err && list){\n            \n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.register = function(req, res){\n    var existingUser;\n    var username = req.body.name;\n    var email = req.body.email;\n    var pass = req.body.pass;\n    var data = {\n      username: username,\n      email: email,\n      pass: pass\n    };\n    \n    conn.collection('users').findOne({email: data.email}, function(err, user){ \n        existingUser = user;\n        if(!existingUser){\n            conn.collection('users').save(data, function(err, user){\n                if(!err && user){\n                    req.session.auth = true;\n                    req.session.user = user;\n                    req.session.username = data.username;\n                    req.session.userId = user._id;\n                    res.json(['OK']);\n                } else {\n                    res.json(['FAIL']);\n                }\n            });            \n        }\n        res.json(['FAIL']);\n    });    \n    //res.json(['FAIL']);\n};\n\nexports.signin = function(req, res){\n    var existingUser;\n    var username = req.body.username;\n    var password = req.body.password;\n    if(req.form.isValid){\n        //todo: this is wrong, all assignments should be done in callback function\n        conn.collection('users').findOne({username: username, pass: password}, function(err, user){ \n                existingUser = user;\n                if(existingUser){\n                    req.session.user = user;\n                    req.session.username = username;\n                    req.session.userId = existingUser._id;\n                    req.session.auth = true;\n                    res.json(['OK']);\n                    return;\n                }\n                res.json(['FAIL']);\n                //console.log(user);\n        });\n    } else {\n        res.json({errors: req.form.errors});\n    }\n};\n\nexports.fbsignin = function(req, res){\n    var username = req.body.username;\n    var password = req.body.password;\n    var email = req.body.email;\n    var friends = req.body.friends;\n    var data = {\n      username: username,\n      email: email,\n      pass: password\n    };\n    conn.collection('users').findOne({email: email}, function(err, user){\n        if(!err){\n            if(user){\n                req.session.user = user;\n                conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                    if(!err && users){\n                        req.session.friends = users;\n                        req.session.auth = true;\n                        res.json([\"OK\"]);\n                    } else {\n                        //res.json(['FAIL']);\n                    }\n                });\n            } else {\n                conn.collection('users').save(data, function(err, user){\n                    if(!err && user){\n                        req.session.user = user;\n                        conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                            if(!err && users){\n                                req.session.friends = users;\n                                res.json([\"OK\"]);\n                            } else {\n                                //res.json(['FAIL']);\n                            }\n                        });\n                    } else {\n                        //err saving\n                    }\n                });\n            }\n        } else {\n            //err on lookup\n        }\n    });\n};\n\nexports.twittersignin = function(req, res){\n    oa.getOAuthRequestToken(function(error, oauth_token, oauth_token_secret, results){\n\tif (error) {\n\t\t//console.log(error);\n\t\t//res.send(\"yeah no. didn't work.\")\n\t}\n\telse {\n\t\treq.session.oauth = {};\n\t\treq.session.oauth.token = oauth_token;\n\t\t//console.log('oauth.token: ' + req.session.oauth.token);\n\t\treq.session.oauth.token_secret = oauth_token_secret;\n\t\t//console.log('oauth.token_secret: ' + req.session.oauth.token_secret);\n\t\tres.redirect('https://twitter.com/oauth/authenticate?oauth_token='+oauth_token);\n    }\n\t});\n};\n\nexports.twitterdashboard = function(req, res){\n    if (req.session.oauth) {\n\treq.session.oauth.verifier = req.query.oauth_verifier;\n\tvar oauth = req.session.oauth;\n\n\toa.getOAuthAccessToken(oauth.token,oauth.token_secret,oauth.verifier, \n\tfunction(error, oauth_access_token, oauth_access_token_secret, results){\n\t\tif (error){\n\t\t\t//console.log(error);\n\t\t\t//res.send(\"yeah something broke.\");\n\t\t} else {\n\t\t\treq.session.oauth.access_token = oauth_access_token;\n\t\t\treq.session.oauth.access_token_secret = oauth_access_token_secret;\n\t\t\t//console.log(results);\n\t\t\t//res.send(\"worked. nice one.\");\n\t\t}\n\t}\n\t);\n\t} else {\n        //render error\n\t}\n};\n\nexports.searchamazon = function(req, res){\n    var keywords = req.body.keywords;\n    opHelper.execute('ItemSearch', {\n    'SearchIndex': 'Blended',\n    'Keywords': keywords,\n    'ResponseGroup': 'ItemAttributes,Offers'\n    }, function(error, results) {\n        if (error) { console.log('Error: ' + error + \"\\n\"); }\n        //console.log(\"Results:\\n\" + util.inspect(results) + \"\\n\");\n        res.json(results);\n    });\n};\n\nexports.searchretailigence = function(req, res){\n    var output = \"\";\n    var location, range, keywords;\n    var latitude = req.body.latitude;\n    var longitude = req.body.longitude;\n    keywords = req.body.keywords;\n    location = latitude.toString() + \",\" + longitude.toString();\n    range = 50;\n    var retailigence = \"apitest.retailigence.com\"; \n    var requestorid = \"3e52c040-067f-11e2-892e-0800200c9a66\";\n    var path=\"/v1.2/products?format=json&apikey=S5t304750JKlOlfE6rCWRjveavEPuBzF&requestorid={0}\";\n    path = path.replace(\"{0}\", requestorid);\n    var query=\"&location={0}&Range={1}&keywords={2}\";\n    query = query.replace(\"{0}\", location).replace(\"{1}\", range).replace(\"{2}\", keywords);\n    var options = {\n          host: retailigence,\n          path: path + query,\n          method: 'GET'\n        };\n    console.log(options);\n    var retailreq = http.server.request(options, function(response){\n        //console.log(\"res \" + res);\n        response.setEncoding('utf8');\n        response.on('data', function (chunk) {\n            //res.json(chunk);\n            output += chunk;\n        });\n        \n        response.on('end', function(){\n            var data = JSON.parse(output);\n            res.json(data); \n        });\n        //response.end();\n    });\n    \n    retailreq.on('error', function(e) {\n        console.log('problem with request: ' + e.message);\n    });\n    \n    retailreq.write('');\n    retailreq.end();\n};/*\n * GET home page.\n */\n \n //var http = require('http');\n var http = require('../app');\n var mongo = require('mongoskin');\n var conn = mongo.db('mongodb://public:public@alex.mongohq.com:10090/HolidayReminder');\n //var util = require('util');\n \n var OAuth= require('oauth').OAuth;\n var OperationHelper = require('apac').OperationHelper;\n\n var opHelper = new OperationHelper({\n     awsId:     'AKIAIAWGTQ3Z7N5WUHPQ',\n     awsSecret: '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',\n     assocId:   ' aztag-20'\n });\n\nvar oa = new OAuth(\n    \"https://api.twitter.com/oauth/request_token\",\n\t\"https://api.twitter.com/oauth/access_token\",\n\t\"YourConsumerKeyProvidedByTwitter\",\n\t\"YourConsumerSecretProvidedByTwitter\",\n\t\"1.0\",\n\t\"http://yourdomain/auth/twitter/callback\",\n\t\"HMAC-SHA1\"\n);\n\nexports.index = function(req, res){\n  res.render('index');\n};\n\nexports.dashboard = function(req, res){\n    var itemList = []\n        , friendList = []\n        , userId;\n    if(req.body.friends){\n        friendList = req.body.friends;\n    }\n    if(req.session.auth){\n        userId = req.session.user._id.toString();\n        conn.collection('items').find({userId: userId}).toArray(function(err, list){\n            itemList = list;\n            conn.collection('friends').find({userId: userId}).toArray(function(err, friends){\n                if(friends.length){\n                    friends.forEach(function(friend){ friendList.push(friend); });\n                    //console.log(friendList[0]);\n                }\n                 conn.collection('lists').find({userId: userId}).toArray(function(err, lists){\n                    if(!err && lists){\n                        res.render('dashboard', { username: req.session.user.username, myList: itemList, friendList: friendList, shoppingLists: lists });\n                    } else {\n                        //err\n                    }\n                 });\n            });            \n        });\n    } else {\n        res.redirect(\"/\");\n    }\n};\n\nexports.addListItem = function(req, res){\n    var userId = req.session.user._id;\n    var name = req.body.name;\n    var desc = req.body.desc;\n    var link = req.body.link;\n    var item = {\n      name: name,\n      desc: desc,\n      link: link\n    };\n    conn.collection('items').save({userId: userId, item: item});\n};\n\nexports.addlink = function(req, res){\n    var link = req.body.link;\n    var itemId = req.body.itemId;\n    conn.collection('items').update({_id: conn.ObjectID.createFromHexString(itemId)},{ $set: {\"item.link\": link }}, function(err,  item){\n        if(item && !err ){\n             res.json(['OK']);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.friendlist = function(req, res){\n    var email = req.params.email\n        , existingUser\n        , id\n        , list = []\n        , auth = false\n        , friend = \"\";\n    if(req.session.auth){\n        auth = true;\n        friend = email;\n    }\n    conn.collection('users').findOne({email: email}, function(err, user){\n        existingUser = user;\n        if(existingUser){\n            id = existingUser._id;\n            conn.collection('items').find({userId: id.toString()}).toArray(function(err, userlist){\n                res.render('friendlist', { friendList: userlist, auth: auth, friend: friend });\n            });            \n        }else{\n            res.render('friendlist', { friendList: list, auth: auth, friend: friend });\n        }\n    });\n};\n\nexports.getFriendList = function(req, res){\n    var list, existingUser;\n    //var email = req.body.email\n    var friendId = req.body.friend.toString();\n    \n    conn.collection('friends').findOne({_id:  conn.ObjectID.createFromHexString(friendId)}, function(err, friend){\n        if(!err && friend){\n            conn.collection('users').findOne({_id: conn.ObjectID.createFromHexString(friend.friendId.toString())}, function(err, user){\n                existingUser = user;\n                if(!err && existingUser){\n                    conn.collection('items').find({userId: existingUser._id.toString()}).toArray(function(err, userList){\n                        if(!err && userList){\n                            list = userList;\n                            res.json(list);\n                        } else {\n                            res.json(['FAIL']);\n                        }\n                    });                    \n                } else {\n                    res.json(['FAIL']);\n                }\n            });\n        } else {\n            res.json(['FAIL']);\n        }\n    });     \n};\n\nexports.fbfriendlist = function(req, res){\n    var fbIds = req.body.friends;\n    var redirect = req.body.redirect;\n    conn.collection('users').find({fbId: {$in: fbIds}}).toArray(function(err, users){\n        if(!err && users){\n            req.session.friends = users;\n            if(redirect){\n                req.redirect('/friends');\n            } else {\n                res.json([users]);\n            }\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.twitterfriendlist = function(req, res){\n    if(req.session.oauth && req.session.user){\n        oa.getProtectedResource(\"https://api.twitter.com/1.1/friends/ids.json?cursor=-1&user_id=\" + req.session.user.twitId + \" \", \"GET\", req.session.oauth.token, req.session.oauth.token_secret, function (error, data, response) {\n              //util.puts(data);\n              res.json([data]);\n        });\n    }\n};\n\nexports.addFriendList = function(req, res){\n    var friend = req.body.friend;\n    var userId = req.session.user._id.toString();\n    conn.collection('users').findOne({email: friend}, function(err, user){\n        if(!err && user){\n            conn.collection('friends').save({userId: userId, friendId: user._id, friendName: user.username, friendEmail: user.email}, function(err, rec){\n                if(err){\n                    res.json([\"FAIL\"]);\n                } else {\n                    res.json([\"OK\"]);\n                }\n            });\n        } else {\n            res.json([\"FAIL\"]);\n        }\n    });\n};\n\nexports.markitempurchased = function(req, res){\n    var itemId = req.body.itemId.toString();\n    conn.collection('items').update({_id: conn.ObjectID.createFromHexString(itemId)}, {$set: {purchased:true}}, function(err, count){\n        if(err){\n            res.json([\"FAIL\"]);\n        } else {\n            res.json([\"OK\"]);\n        }\n    });\n};\n\nexports.createlist = function(req, res){\n    var listName = req.body.listName;\n    conn.collection('lists').save({name: listName, userId: req.session.user._id, items: []}, function(err, list){\n        if(!err && list){\n            res.json(list._id);\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n};\n\nexports.getshoppinglist = function(req, res){\n    var listId = req.body.listId.toString();\n    var ids = [];\n    conn.collection('lists').findOne({_id: conn.ObjectID.createFromHexString(listId)}, function(err, list){\n        list.items.forEach(function(item){ ids.push(conn.ObjectID.createFromHexString(item)); });\n        conn.collection('items').find({_id: {$in: ids}}).toArray(function(err, items){\n            if(!err && items){\n                res.json(items);\n            } else {\n                res.json(['FAIL']);\n            }\n        });\n        \n    });\n};\n\nexports.posttoshoppinglist = function(req, res){\n    var item = req.body.itemId;\n    var listId = req.body.listId.toString();\n    conn.collection('lists').update({_id: conn.ObjectID.createFromHexString(listId)}, {$push: {items: item}}, function(err, list){\n        if(!err && list){\n            res.json(['OK']);"],[1,"\"item.id\": itemId}, {$set: {\"item.link\": link }}, function(err, list){\n        if(!err && list){\n            "],[0,"\n   "]],"start1":7925,"start2":7925,"length1":14213,"length2":117}]],"length":14566,"saved":false}
{"ts":1349467884333,"patch":[[{"diffs":[[0,"), \"item"],[1,"s"],[0,".id\": it"]],"start1":7926,"start2":7926,"length1":16,"length2":17},{"diffs":[[0,"}, {$set: {\"item"],[1,"s"],[0,".link\": link }},"]],"start1":7947,"start2":7947,"length1":32,"length2":33}]],"length":14568,"saved":false}
{"ts":1349468033710,"patch":[[{"diffs":[[0,"t){\n            "],[1,"res.json(['OK'])"],[0,"\n        } else "]],"start1":8024,"start2":8024,"length1":32,"length2":48}]],"length":14584,"saved":false}
{"ts":1349468295132,"patch":[[{"diffs":[[0,"{\"items."],[1,"$."],[0,"link\": l"]],"start1":7957,"start2":7957,"length1":16,"length2":18}]],"length":14586,"saved":false}
{"ts":1349468790782,"patch":[[{"diffs":[[0,"(['OK'])"],[1,";"],[0,"\n       "]],"start1":8050,"start2":8050,"length1":16,"length2":17}]],"length":14587,"saved":false}
{"ts":1349471093206,"patch":[[{"diffs":[[0,"!err && items){\n"],[1,"                items.forEach(function(item){\n                    var currentItem = this;\n                    list.items.forEach(function(){\n                        if(currentItem._id.toString() == this.id.toString()){\n                            \n                        }\n                    });\n                });\n"],[0,"                "]],"start1":7108,"start2":7108,"length1":32,"length2":350}]],"length":14905,"saved":false}
{"ts":1349471127284,"patch":[[{"diffs":[[0,"m){\n"],[-1,"                    var currentItem = this;\n"],[0,"    "]],"start1":7166,"start2":7166,"length1":52,"length2":8},{"diffs":[[0,"orEach(function("],[1,"listItem"],[0,"){\n             "]],"start1":7202,"start2":7202,"length1":32,"length2":40}]],"length":14869,"saved":false}
{"ts":1349471192846,"patch":[[{"diffs":[[0," if("],[-1,"currentI"],[1,"i"],[0,"tem."]],"start1":7252,"start2":7252,"length1":16,"length2":9},{"diffs":[[0,"ng() == "],[-1,"this"],[1,"listItem"],[0,".id.toSt"]],"start1":7271,"start2":7271,"length1":20,"length2":24},{"diffs":[[0,"                "],[1,"item.friendLink = listItem.link;"],[0,"\n               "]],"start1":7316,"start2":7316,"length1":32,"length2":64}]],"length":14898,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349639632185,"patch":[[{"diffs":[[0,"son("],[-1,"["],[0,"users"],[-1,"]"],[0,");\n "]],"start1":4894,"start2":4894,"length1":15,"length2":13}]],"length":14896,"saved":false}
{"ts":1349640457399,"patch":[[{"diffs":[[0,"riends;\n    "],[1,"//"],[0,"var redirect"]],"start1":4584,"start2":4584,"length1":24,"length2":26}]],"length":14898,"saved":false}
{"ts":1349640470620,"patch":[[{"diffs":[[0,"friends = users;"],[-1,"\n"],[0,"            if(r"]],"start1":4769,"start2":4769,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"if(redirect){\n                req.redirect('/friends');\n            } else {\n    "],[1,"\n"],[0,"    "]],"start1":4793,"start2":4793,"length1":89,"length2":9},{"diffs":[[0,"(users);"],[-1,"\n"],[0,"        "]],"start1":4818,"start2":4818,"length1":17,"length2":16},{"diffs":[[0,"rs);            "],[-1,"}"],[0,"\n        } else "]],"start1":4822,"start2":4822,"length1":33,"length2":32}]],"length":14815,"saved":false}
{"ts":1349640562275,"patch":[[{"diffs":[[0,"body.friends"],[1,",\n        i"],[0,";\n    //var "]],"start1":4578,"start2":4578,"length1":24,"length2":35},{"diffs":[[0,"!err && users){\n"],[1,"            \n"],[0,"            req."]],"start1":4740,"start2":4740,"length1":32,"length2":45},{"diffs":[[0," = users"],[1,".forEach(function(user){ return user.matchId =  })"],[0,";       "]],"start1":4800,"start2":4800,"length1":16,"length2":66}]],"length":14889,"saved":false}
{"ts":1349640587142,"patch":[[{"diffs":[[0,".friends"],[-1,","],[0,"\n       "]],"start1":4582,"start2":4582,"length1":17,"length2":16},{"diffs":[[0,"        "],[-1,"i"],[1,",i = 0"],[0,";\n    //"]],"start1":4591,"start2":4591,"length1":17,"length2":22},{"diffs":[[0,"(!err && users){"],[-1,"\n"],[0,"            \n   "]],"start1":4743,"start2":4743,"length1":33,"length2":32},{"diffs":[[0,"tchId = "],[1,"i; i++"],[0," });    "]],"start1":4850,"start2":4850,"length1":16,"length2":22}]],"length":14898,"saved":false}
{"ts":1349640591548,"patch":[[{"diffs":[[0,"= i; i++"],[1,";"],[0," });    "]],"start1":4856,"start2":4856,"length1":16,"length2":17}]],"length":14899,"saved":false}
{"ts":1349641224233,"patch":[[{"diffs":[[0,"n(user){"],[-1," return"],[0," user.ma"]],"start1":4827,"start2":4827,"length1":23,"length2":16},{"diffs":[[0," i; i++;"],[1," return user;"],[0," });    "]],"start1":4850,"start2":4850,"length1":16,"length2":29}]],"length":14905,"saved":false}
{"ts":1349641350241,"patch":[[{"diffs":[[0,"  }\n    });\n};\n\n"],[1,"exports.addfbfriendlist = function(req, res){\n    var matchId = req.body.matchId;\n    var friendId = req.session.friends[matchId];\n    \n}\n\n"],[0,"exports.twitterf"]],"start1":4984,"start2":4984,"length1":32,"length2":171}]],"length":15044,"saved":false}
{"ts":1349641354848,"patch":[[{"diffs":[[0,";\n    \n}"],[1,";"],[0,"\n\nexport"]],"start1":5129,"start2":5129,"length1":16,"length2":17}]],"length":15045,"saved":false}
{"ts":1349641481807,"patch":[[{"diffs":[[0,"tchId];\n    "],[1,"conn.collection('users').findOne({_id: conn.ObjectID.createFromHexString(friendId)}, function(err, user){\n        if(!err && user){\n            conn.collection('friends').save({userId: userId, friendId: user._id, friendName: user.username, friendEmail: user.email}, function(err, rec){\n                if(err){\n                    res.json([\"FAIL\"]);\n                } else {\n                    res.json([\"OK\"]);\n                }\n            });\n        } else {\n            res.json([\"FAIL\"]);\n        }\n    });"],[0,"\n};\n\nexports"]],"start1":5123,"start2":5123,"length1":24,"length2":538}]],"length":15559,"saved":false}
{"ts":1349641510357,"patch":[[{"diffs":[[0,"tchId];\n"],[1,"    var userId = req.session.user._id.toString();\n"],[0,"    conn"]],"start1":5123,"start2":5123,"length1":16,"length2":66}]],"length":15609,"saved":false}
{"ts":1349641590515,"patch":[[{"diffs":[[0,"rts."],[-1,"addfb"],[1,"twitter"],[0,"frie"]],"start1":5004,"start2":5004,"length1":13,"length2":15},{"diffs":[[0,"    "],[-1,"var matchId = req.body.matchId;\n    var friendId = req.session.friends[matchId]"],[1,"if(req.session.oauth && req.session.user){\n        oa.getProtectedResource(\"https://api.twitter.com/1.1/friends/ids.json?cursor=-1&user_id=\" + req.session.user.twitId + \" \", \"GET\", req.session.oauth.token, req.session.oauth.token_secret, function (error, data, response) {\n              //util.puts(data);\n              res.json([data]);\n        });\n    }\n};\n\nexports.addFriendList = function(req, res){\n    var friend = req.body.friend"],[0,";\n  "]],"start1":5048,"start2":5048,"length1":87,"length2":444},{"diffs":[[0,"ne({"],[-1,"_id: conn.ObjectID.createFromHexString("],[1,"email: "],[0,"friend"],[-1,"Id)"],[0,"}, f"]],"start1":5574,"start2":5574,"length1":56,"length2":21},{"diffs":[[0,"});\n};\n\nexports."],[-1,"twitter"],[1,"addfb"],[0,"friendlist = fun"]],"start1":6020,"start2":6020,"length1":39,"length2":37},{"diffs":[[0,"    "],[-1,"if(req.session.oauth && req.session.user){\n        oa.getProtectedResource(\"https://api.twitter.com/1.1/friends/ids.json?cursor=-1&user_id=\" + req.session.user.twitId + \" \", \"GET\", req.session.oauth.token, req.session.oauth.token_secret, function (error, data, response) {\n              //util.puts(data);\n              res.json([data]);\n        });\n    }\n};\n\nexports.addFriendList = function(req, res){"],[1,"var matchId = req.body.matchId;"],[0,"\n   "]],"start1":6074,"start2":6074,"length1":411,"length2":39},{"diffs":[[0,"r friend"],[1,"Id"],[0," = req."],[-1,"body.friend"],[1,"session.friends[matchId]"],[0,";\n    va"]],"start1":6116,"start2":6116,"length1":34,"length2":49},{"diffs":[[0,"').findOne({"],[-1,"email: "],[1,"_id: conn.ObjectID.createFromHexString("],[0,"friend"],[1,"Id)"],[0,"}, function("]],"start1":6235,"start2":6235,"length1":37,"length2":72}]],"length":15609,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349900119153,"patch":[[{"diffs":[[0,"(user){ "],[1,"\n                "],[0,"user.mat"]],"start1":4828,"start2":4828,"length1":16,"length2":33},{"diffs":[[0," i; "],[-1,"i++; return user;"],[1,"\n                i++; \n                return user; \n           "],[0," });"]],"start1":4867,"start2":4867,"length1":25,"length2":72}]],"length":15673,"saved":false}
{"ts":1349900331094,"patch":[[{"diffs":[[0,"ction(user){"],[-1," "],[1,"\n                var newUser ={\n                    matchId: i,\n                    name: user.username\n                }"],[0,"\n           "]],"start1":4823,"start2":4823,"length1":25,"length2":145}]],"length":15793,"saved":false}
{"ts":1349900358463,"patch":[[{"diffs":[[0,"   }"],[-1,"\n                user.matchId = i;"],[0," \n  "]],"start1":4952,"start2":4952,"length1":42,"length2":8}]],"length":15759,"saved":false}
{"ts":1349900558867,"patch":[[{"diffs":[[0," return "],[-1,"u"],[1,"newU"],[0,"ser; \n  "]],"start1":4995,"start2":4995,"length1":17,"length2":20}]],"length":15762,"saved":false}
{"ts":1349900574877,"patch":[[{"diffs":[[0,"       }"],[1,";"],[0," \n      "]],"start1":4948,"start2":4948,"length1":16,"length2":17}]],"length":15763,"saved":false}
{"ts":1349900683777,"patch":[[{"diffs":[[0,"        "],[-1,"return"],[1,"user ="],[0," newUser"]],"start1":4989,"start2":4989,"length1":22,"length2":22}]],"length":15763,"saved":false}
{"ts":1349900784413,"patch":[[{"diffs":[[0," users){"],[1,"\n"],[0,"        "]],"start1":4751,"start2":4751,"length1":16,"length2":17},{"diffs":[[0,"s){\n            "],[1,"var newUsers = [];"],[0,"\n            req"]],"start1":4756,"start2":4756,"length1":32,"length2":50},{"diffs":[[0,"    "],[-1,"user = "],[1,"newUsers.push("],[0,"newUser"],[1,")"],[0,"; \n "]],"start1":5012,"start2":5012,"length1":22,"length2":30}]],"length":15790,"saved":false}
{"ts":1349900789815,"patch":[[{"diffs":[[0,"es.json("],[-1,"u"],[1,"newU"],[0,"sers);  "]],"start1":5082,"start2":5082,"length1":17,"length2":20}]],"length":15793,"saved":false}
{"ts":1349901664095,"patch":[[{"diffs":[[0,"\n    });"],[-1,"     "],[1,"\n};\n\nexports.getfbfriendlist = function(req, res){\n    var matchId = req.body.matchId;"],[0,"\n};\n\nexp"]],"start1":4497,"start2":4497,"length1":21,"length2":102},{"diffs":[[0,"ewUsers);   "],[-1,"         "],[0,"\n        } e"]],"start1":5172,"start2":5172,"length1":33,"length2":24}]],"length":15865,"saved":false}
{"ts":1349903165117,"patch":[[{"diffs":[[0,"Users = [];\n"],[1,"            var matches = [];\n"],[0,"            "]],"start1":4860,"start2":4860,"length1":24,"length2":54},{"diffs":[[0,"function(user){\n"],[-1,""],[0,"                "]],"start1":4950,"start2":4950,"length1":32,"length2":32},{"diffs":[[0,"      };"],[-1," "],[1,"\n                var matchItem ={\n                    id: user._id,\n                    matchId: i++\n                };\n                matche.push(matchItem);\n                req.session.friendMatch"],[0,"\n       "]],"start1":5079,"start2":5079,"length1":17,"length2":215}]],"length":16093,"saved":false}
{"ts":1349903179090,"patch":[[{"diffs":[[0,"tchId: i"],[-1,"++"],[0,"\n       "]],"start1":5177,"start2":5177,"length1":18,"length2":16},{"diffs":[[0,"   match"],[-1,"e"],[0,".push(ma"]],"start1":5218,"start2":5218,"length1":17,"length2":16}]],"length":16090,"saved":false}
{"ts":1349903183418,"patch":[[{"diffs":[[0,"   match"],[1,"es"],[0,".push(ma"]],"start1":5218,"start2":5218,"length1":16,"length2":18}]],"length":16092,"saved":false}
{"ts":1349903221926,"patch":[[{"diffs":[[0,"m);\n"],[-1,"                req.session.friendMatch\n"],[0,"    "]],"start1":5242,"start2":5242,"length1":48,"length2":8},{"diffs":[[0,"    i++;"],[-1," "],[0,"\n       "]],"start1":5258,"start2":5258,"length1":17,"length2":16},{"diffs":[[0,"\n            });"],[1,"\n"],[0,"            \n   "]],"start1":5307,"start2":5307,"length1":32,"length2":33},{"diffs":[[0,"});\n            "],[1,"req.session.friendMatch = matches;"],[0,"\n            res"]],"start1":5320,"start2":5320,"length1":32,"length2":66}]],"length":16086,"saved":false}
{"ts":1349903301550,"patch":[[{"diffs":[[0,"atchId;\n"],[1,"    var matchList = req.session.friendMatch;\n    var userId = matchList[matchId].id;\n"],[0,"};\n\nexpo"]],"start1":4584,"start2":4584,"length1":16,"length2":101}]],"length":16171,"saved":false}
{"ts":1349903304943,"patch":[[{"diffs":[[0,"Id].id;\n"],[1,"     conn.collection('friends').findOne({_id:  conn.ObjectID.createFromHexString(friendId)}, function(err, friend){\n        if(!err && friend){\n            conn.collection('users').findOne({_id: conn.ObjectID.createFromHexString(friend.friendId.toString())}, function(err, user){\n                existingUser = user;\n                if(!err && existingUser){\n                    conn.collection('items').find({userId: existingUser._id.toString()}).toArray(function(err, userList){\n                        if(!err && userList){\n                            list = userList;\n                            res.json(list);\n                        } else {\n                            res.json(['FAIL']);\n                        }\n                    });                    \n                } else {\n                    res.json(['FAIL']);\n                }\n            });\n        } else {\n            res.json(['FAIL']);\n        }\n    });\n"],[0,"};\n\nexpo"]],"start1":4669,"start2":4669,"length1":16,"length2":949}]],"length":17104,"saved":false}
{"ts":1349903316866,"patch":[[{"diffs":[[0,"atchId].id;\n"],[1,"    var existingUser;\n"],[0,"     conn.co"]],"start1":4665,"start2":4665,"length1":24,"length2":46}]],"length":17126,"saved":false}
{"ts":1349903323312,"patch":[[{"diffs":[[0,"existingUser"],[1,", list"],[0,";\n     conn."]],"start1":4685,"start2":4685,"length1":24,"length2":30}]],"length":17132,"saved":false}
{"ts":1349903335354,"patch":[[{"diffs":[[0,"teFromHexString("],[-1,"friend"],[1,"user"],[0,"Id)}, function(e"]],"start1":4770,"start2":4770,"length1":38,"length2":36}]],"length":17130,"saved":false}
{"ts":1349904408122,"patch":[[{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":2603,"start2":2603,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":4238,"start2":4238,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":4367,"start2":4367,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":4444,"start2":4444,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":5350,"start2":5350,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":5479,"start2":5479,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":5556,"start2":5556,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":6431,"start2":6431,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"\"FAIL\""],[0,""],[1,""],[0,"]);\n            "]],"start1":7307,"start2":7307,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"\"FAIL\""],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":7447,"start2":7447,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"\"FAIL\""],[0,""],[1,""],[0,"]);\n            "]],"start1":7999,"start2":7999,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"\"FAIL\""],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":8139,"start2":8139,"length1":38,"length2":32},{"diffs":[[0,"on(["],[-1,"\"FAIL\""],[0,""],[1,""],[0,"]);\n"]],"start1":8443,"start2":8443,"length1":14,"length2":8},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":8794,"start2":8794,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":9647,"start2":9647,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":10109,"start2":10109,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n        }\n  "]],"start1":10530,"start2":10530,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":11336,"start2":11336,"length1":38,"length2":32},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,"]);\n    });    \n"]],"start1":11414,"start2":11414,"length1":38,"length2":32},{"diffs":[[0,"//res.json(["],[-1,"'FAIL'"],[0,"]);\n};\n\nexpo"]],"start1":11450,"start2":11450,"length1":30,"length2":24},{"diffs":[[0,"      res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":12182,"start2":12182,"length1":38,"length2":32},{"diffs":[[0,"    //res.json(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n            "]],"start1":13080,"start2":13080,"length1":38,"length2":32},{"diffs":[[0,"on(["],[-1,"'FAIL'"],[0,""],[1,""],[0,"]);\n"]],"start1":13666,"start2":13666,"length1":14,"length2":8}]],"length":16992,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350055505242,"patch":[[{"diffs":[[0,"er;\n    var "],[-1,"username"],[1,"email"],[0," = req.body."]],"start1":11525,"start2":11525,"length1":32,"length2":29}]],"length":16989,"saved":false}
{"ts":1350055512248,"patch":[[{"diffs":[[0,"ername: "],[-1,"username"],[1,"email"],[0,", pass: "]],"start1":11755,"start2":11755,"length1":24,"length2":21},{"diffs":[[0,"rname = "],[-1,"username"],[1,"email"],[0,";\n      "]],"start1":11960,"start2":11960,"length1":24,"length2":21}]],"length":16983,"saved":false}
{"ts":1350057104430,"patch":[[{"diffs":[[0,"A1\"\n);\n\n"],[1,"var fbOa = new OAuth(\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\"\n);\n\n"],[0,"exports."]],"start1":766,"start2":766,"length1":16,"length2":97}]],"length":17064,"saved":false}
{"ts":1350057188128,"patch":[[{"diffs":[[0,"   \"\",\n    \""],[-1,"\",\n    \""],[1,"368684593212563\",\n    \"d6f7ad1fd7ae1fb90aed27981cc23aa2"],[0,"\",\n    \"\",\n "]],"start1":805,"start2":805,"length1":32,"length2":79},{"diffs":[[0,"\",\n    \"\",\n    \""],[1,"2.0"],[0,"\",\n    \"\"\n);\n\nex"]],"start1":872,"start2":872,"length1":32,"length2":35}]],"length":17114,"saved":false}
{"ts":1350057214000,"patch":[[{"diffs":[[0,"C-SHA1\"\n);\n\n"],[1,"/*"],[0,"var fbOa = n"]],"start1":762,"start2":762,"length1":24,"length2":26},{"diffs":[[0,"   \"\"\n);"],[1,"*/"],[0,"\n\nexport"]],"start1":897,"start2":897,"length1":16,"length2":18}]],"length":17118,"saved":false}
{"ts":1350057240866,"patch":[[{"diffs":[[0,"\",\n    \""],[1,"http://holidayreminder.challetwoods.c9.io/dashboard"],[0,"\"\n);*/\n\n"]],"start1":893,"start2":893,"length1":16,"length2":67}]],"length":17169,"saved":false}
{"ts":1350057272298,"patch":[[{"diffs":[[0,"23aa2\",\n"],[-1,"    \"\",\n"],[0,"    \"2.0"]],"start1":869,"start2":869,"length1":24,"length2":16},{"diffs":[[0,"shboard\""],[1,",\n    \"HMAC-SHA1\""],[0,"\n);*/\n\ne"]],"start1":937,"start2":937,"length1":16,"length2":33}]],"length":17178,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350569854273,"patch":[[{"diffs":[[0,", res){\n    "],[1,"//"],[0,"oa.getOAuthR"]],"start1":14143,"start2":14143,"length1":24,"length2":26},{"diffs":[[0,"ults){\n\t"],[1,"//"],[0,"if (erro"]],"start1":14233,"start2":14233,"length1":16,"length2":18},{"diffs":[[0,"\")\n\t"],[1,"//"],[0,"}\n\t"],[1,"//"],[0,"else {\n\t"],[1,"//"],[0,"\treq"]],"start1":14315,"start2":14315,"length1":19,"length2":25},{"diffs":[[0," = {};\n\t"],[1,"//"],[0,"\treq.ses"]],"start1":14354,"start2":14354,"length1":16,"length2":18},{"diffs":[[0,"oken);\n\t"],[-1,""],[0,""],[1,"//"],[0,"\treq.ses"]],"start1":14457,"start2":14457,"length1":16,"length2":18},{"diffs":[[0,"cret);\n\t"],[1,"//"],[0,"\tres.red"]],"start1":14588,"start2":14588,"length1":16,"length2":18},{"diffs":[[0,"n);\n    "],[1,"//"],[0,"}\n\t"],[1,"//"],[0,"});\n};\n\n"]],"start1":14676,"start2":14676,"length1":19,"length2":23}]],"length":17198,"saved":false}
{"ts":1350569972356,"patch":[[{"diffs":[[0," //}\n\t//});\n"],[1,"    res.send(\"<p>Sucess</p>\");\n"],[0,"};\n\nexports."]],"start1":14683,"start2":14683,"length1":24,"length2":55}]],"length":17229,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350663298625,"patch":[[{"diffs":[[0,"res."],[-1,"send(\"<p>Sucess</p>"],[1,"redirect(\"/dashboard"],[0,"\");\n"]],"start1":14699,"start2":14699,"length1":27,"length2":28}]],"length":17230,"saved":false}
{"ts":1350663581302,"patch":[[{"diffs":[[0,", res){\n    "],[1,"/*"],[0,"if (req.sess"]],"start1":14770,"start2":14770,"length1":24,"length2":26},{"diffs":[[0,"error\n\t}"],[1,"*/"],[0,"\n};\n\nexp"]],"start1":15361,"start2":15361,"length1":16,"length2":18}]],"length":17234,"saved":false}
{"ts":1350663585488,"patch":[[{"diffs":[[0,"or\n\t}*/\n"],[1,"    if(req.isAuthenticated()){\n        res.send(req.session.auth.user);\n    }else{\n        res.send('false');\n    }\n"],[0,"};\n\nexpo"]],"start1":15364,"start2":15364,"length1":16,"length2":132}]],"length":17350,"saved":false}
{"ts":1350663651479,"patch":[[{"diffs":[[0,"s){\n    "],[-1,"/*"],[0,"if (req."]],"start1":14774,"start2":14774,"length1":18,"length2":16},{"diffs":[[0,"r\n\t}"],[-1,"*/\n    if(req.isAuthenticated()){\n        res.send(req.session.auth.user);\n    }else{\n        res.send('false');\n    }"],[0,"\n};\n"]],"start1":15363,"start2":15363,"length1":126,"length2":8}]],"length":17230,"saved":false}
{"ts":1350663657585,"patch":[[{"diffs":[[0,"auth) {\n"],[1,"    "],[0,"\treq.ses"]],"start1":14799,"start2":14799,"length1":16,"length2":20},{"diffs":[[0,"rifier;\n"],[1,"    "],[0,"\tvar oau"]],"start1":14859,"start2":14859,"length1":16,"length2":20},{"diffs":[[0,".oauth;\n"],[-1,"\n"],[1,"    \n    "],[0,"\toa.getO"]],"start1":14895,"start2":14895,"length1":17,"length2":25},{"diffs":[[0,"ifier, \n"],[1,"    "],[0,"\tfunctio"]],"start1":14976,"start2":14976,"length1":16,"length2":20},{"diffs":[[0,"sults){\n"],[1,"    "],[0,"\t\tif (er"]],"start1":15054,"start2":15054,"length1":16,"length2":20},{"diffs":[[0,"error){\n"],[1,"    "],[0,"\t\t\t//con"]],"start1":15072,"start2":15072,"length1":16,"length2":20},{"diffs":[[0,"error);\n"],[1,"    "],[0,"\t\t\t//res"]],"start1":15101,"start2":15101,"length1":16,"length2":20},{"diffs":[[0,"oke.\");\n"],[1,"    "],[0,"\t\t} else"]],"start1":15145,"start2":15145,"length1":16,"length2":20},{"diffs":[[0," else {\n"],[1,"    "],[0,"\t\t\treq.s"]],"start1":15160,"start2":15160,"length1":16,"length2":20},{"diffs":[[0,"_token;\n"],[1,"    "],[0,"\t\t\treq.s"]],"start1":15220,"start2":15220,"length1":16,"length2":20},{"diffs":[[0,"secret;\n"],[1,"    "],[0,"\t\t\t//con"]],"start1":15294,"start2":15294,"length1":16,"length2":20},{"diffs":[[0,"sults);\n"],[1,"    "],[0,"\t\t\t//res"]],"start1":15325,"start2":15325,"length1":16,"length2":20},{"diffs":[[0,"\");\n"],[-1,"\t\t}\n\t}\n"],[1,"    \t\t}\n    \t}\n    "],[0,"\t);\n"]],"start1":15369,"start2":15369,"length1":15,"length2":27}]],"length":17294,"saved":false}
{"ts":1350663777010,"patch":[[{"diffs":[[0,"s){\n    "],[-1,"//"],[0,"oa.getOA"]],"start1":14147,"start2":14147,"length1":18,"length2":16},{"diffs":[[0,"ults){\n\t"],[-1,"//"],[0,"if (erro"]],"start1":14231,"start2":14231,"length1":18,"length2":16},{"diffs":[[0,"or) {\n\t\t"],[-1,"//"],[0,"console."]],"start1":14246,"start2":14246,"length1":18,"length2":16},{"diffs":[[0,"ror);\n\t\t"],[-1,"//"],[0,"res.send"]],"start1":14268,"start2":14268,"length1":18,"length2":16},{"diffs":[[0,"k.\")"],[1,";"],[0,"\n\t"],[-1,"//}\n\t//"],[1,"} "],[0,"else {\n\t"],[-1,"//"],[0,"\treq"]],"start1":14305,"start2":14305,"length1":27,"length2":21},{"diffs":[[0," = {};\n\t"],[-1,"//"],[0,"\treq.ses"]],"start1":14340,"start2":14340,"length1":18,"length2":16},{"diffs":[[0,"oken);\n\t"],[-1,"//"],[0,""],[1,""],[0,"\treq.ses"]],"start1":14441,"start2":14441,"length1":18,"length2":16},{"diffs":[[0,"t);\n"],[1,"\t"],[0,"\t//"],[-1,"\t"],[0,"res."]],"start1":14573,"start2":14573,"length1":12,"length2":12},{"diffs":[[0,"    "],[-1,"//"],[0,"}\n\t"],[-1,"//"],[0,"});\n    "],[1,"//"],[0,"res."],[-1,"redirect(\"/dashboard"],[1,"send(\"<p>Sucess</p>"],[0,"\");\n"]],"start1":14662,"start2":14662,"length1":47,"length2":44},{"diffs":[[0,"auth) {\n"],[-1,"    "],[0,"\treq.ses"]],"start1":14778,"start2":14778,"length1":20,"length2":16},{"diffs":[[0,"rifier;\n"],[-1,"    "],[0,"\tvar oau"]],"start1":14834,"start2":14834,"length1":20,"length2":16},{"diffs":[[0,".oauth;\n"],[-1,"    \n    "],[1,"\n"],[0,"\toa.getO"]],"start1":14866,"start2":14866,"length1":25,"length2":17},{"diffs":[[0,"ifier, \n"],[-1,"    "],[0,"\tfunctio"]],"start1":14939,"start2":14939,"length1":20,"length2":16},{"diffs":[[0,"sults){\n"],[-1,"    "],[0,"\t\tif (er"]],"start1":15013,"start2":15013,"length1":20,"length2":16},{"diffs":[[0,"error){\n"],[-1,"    "],[0,"\t\t\t//con"]],"start1":15027,"start2":15027,"length1":20,"length2":16},{"diffs":[[0,"error);\n"],[-1,"    "],[0,"\t\t\t//res"]],"start1":15052,"start2":15052,"length1":20,"length2":16},{"diffs":[[0,"oke.\");\n"],[-1,"    "],[0,"\t\t} else"]],"start1":15092,"start2":15092,"length1":20,"length2":16},{"diffs":[[0," else {\n"],[-1,"    "],[0,"\t\t\treq.s"]],"start1":15103,"start2":15103,"length1":20,"length2":16},{"diffs":[[0,"_token;\n"],[-1,"    "],[0,"\t\t\treq.s"]],"start1":15159,"start2":15159,"length1":20,"length2":16},{"diffs":[[0,"secret;\n"],[-1,"    "],[0,"\t\t\t//con"]],"start1":15229,"start2":15229,"length1":20,"length2":16},{"diffs":[[0,"sults);\n"],[-1,"    "],[0,"\t\t\t//res"]],"start1":15256,"start2":15256,"length1":20,"length2":16},{"diffs":[[0,"\");\n"],[-1,"    \t\t}\n    \t}\n    "],[1,"\t\t}\n\t}\n"],[0,"\t);\n"]],"start1":15296,"start2":15296,"length1":27,"length2":15}]],"length":17209,"saved":false}
{"ts":1350664460153,"patch":[[{"diffs":[[0,"nder');\n"],[1," var keys = require('./keys');\n"],[0," //var u"]],"start1":204,"start2":204,"length1":16,"length2":47},{"diffs":[[0,"ss_token\",\n\t"],[-1,"\"You"],[1,"keys.twitte"],[0,"rConsumerKey"]],"start1":648,"start2":648,"length1":28,"length2":35},{"diffs":[[0,"sumerKey"],[-1,"ProvidedByTwitter\""],[0,",\n\t\"Your"]],"start1":675,"start2":675,"length1":34,"length2":16}]],"length":17229,"saved":false}
{"ts":1350664469801,"patch":[[{"diffs":[[0,"y,\n\t"],[-1,"\"You"],[1,"keys.twitte"],[0,"rCon"]],"start1":682,"start2":682,"length1":12,"length2":19},{"diffs":[[0,"cret"],[-1,"ProvidedByTwitter\""],[0,",\n\t\""]],"start1":708,"start2":708,"length1":26,"length2":8}]],"length":17218,"saved":false}
{"ts":1350664495382,"patch":[[{"diffs":[[0,"p://"],[-1,"yourdomain/auth/twitter/callback"],[1,"holidayreminder.challetwoods.c9.io/twitterdashboard"],[0,"\",\n\t"]],"start1":727,"start2":727,"length1":40,"length2":59}]],"length":17237,"saved":false}
{"ts":1350665608448,"patch":[[{"diffs":[[0,", res){\n    "],[1,"//"],[0,"oa.getOAuthR"]],"start1":14171,"start2":14171,"length1":24,"length2":26},{"diffs":[[0,"ults){\n\t"],[1,"//"],[0,"if (erro"]],"start1":14261,"start2":14261,"length1":16,"length2":18},{"diffs":[[0,"ror) {\n\t"],[1,"//"],[0,"\tconsole"]],"start1":14277,"start2":14277,"length1":16,"length2":18},{"diffs":[[0,"rror);\n\t"],[1,"//"],[0,"\tres.sen"]],"start1":14301,"start2":14301,"length1":16,"length2":18},{"diffs":[[0,"t work.\");\n\t"],[1,"//"],[0,"} else {\n\t\tr"]],"start1":14336,"start2":14336,"length1":24,"length2":26},{"diffs":[[0,"else {\n\t"],[1,"//"],[0,"\treq.ses"]],"start1":14352,"start2":14352,"length1":16,"length2":18},{"diffs":[[0," = {};\n\t"],[1,"//"],[0,"\treq.ses"]],"start1":14380,"start2":14380,"length1":16,"length2":18},{"diffs":[[0,"oken);\n\t"],[1,"//"],[0,"\treq.ses"]],"start1":14483,"start2":14483,"length1":16,"length2":18},{"diffs":[[0,"    "],[1,"//"],[0,"}\n\t"],[1,"//"],[0,"});\n    "],[-1,"//"],[0,"res."]],"start1":14706,"start2":14706,"length1":21,"length2":23},{"diffs":[[0,"end("],[-1,"\"<p>Sucess</p>\""],[1," JSON.stringify( req.getAuthDetails()) "],[0,");\n}"]],"start1":14730,"start2":14730,"length1":23,"length2":47}]],"length":17279,"saved":false}
{"ts":1350665665221,"patch":[[{"diffs":[[0,"quire('."],[1,"."],[0,"/keys');"]],"start1":226,"start2":226,"length1":16,"length2":17}]],"length":17280,"saved":false}
{"ts":1350665734771,"patch":[[{"diffs":[[0,"\n\t//});\n    "],[1,"//"],[0,"res.send( JS"]],"start1":14714,"start2":14714,"length1":24,"length2":26}]],"length":17282,"saved":false}
{"ts":1350665749665,"patch":[[{"diffs":[[0,"s()) );\n"],[1,"    res.send(\"success\");\n"],[0,"};\n\nexpo"]],"start1":14771,"start2":14771,"length1":16,"length2":41}]],"length":17307,"saved":false}
{"ts":1350665777875,"patch":[[{"diffs":[[0,", res){\n    "],[1,"//"],[0,"if (req.sess"]],"start1":14847,"start2":14847,"length1":24,"length2":26},{"diffs":[[0,"uth) {\n\t"],[1,"//"],[0,"req.sess"]],"start1":14879,"start2":14879,"length1":16,"length2":18},{"diffs":[[0,"ifier;\n\t"],[1,"//"],[0,"var oaut"]],"start1":14937,"start2":14937,"length1":16,"length2":18},{"diffs":[[0,"auth;\n\n\t"],[1,"//"],[0,"oa.getOA"]],"start1":14972,"start2":14972,"length1":16,"length2":18},{"diffs":[[0,"fier, \n\t"],[1,"//"],[0,"function"]],"start1":15046,"start2":15046,"length1":16,"length2":18},{"diffs":[[0,"ults){\n\t"],[1,"//"],[0,"\tif (err"]],"start1":15122,"start2":15122,"length1":16,"length2":18},{"diffs":[[0,"ke.\");\n\t"],[1,"//"],[0,"\t} else "]],"start1":15203,"start2":15203,"length1":16,"length2":18},{"diffs":[[0,"else {\n\t"],[1,"//"],[0,"\t\treq.se"]],"start1":15216,"start2":15216,"length1":16,"length2":18},{"diffs":[[0,"token;\n\t"],[1,"//"],[0,"\t\treq.se"]],"start1":15274,"start2":15274,"length1":16,"length2":18},{"diffs":[[0,");\n\t"],[1,"//"],[0,"\t}\n\t"],[1,"//"],[0,"}\n\t"],[1,"//"],[0,");\n\t"],[1,"//"],[0,"} el"]],"start1":15413,"start2":15413,"length1":19,"length2":27},{"diffs":[[0," error\n\t"],[-1,"}"],[1,"//}\n     res.send( JSON.stringify( req.getAuthDetails()) );"],[0,"\n};\n\nexp"]],"start1":15461,"start2":15461,"length1":17,"length2":75}]],"length":17391,"saved":false}
{"ts":1350665876755,"patch":[[{"diffs":[[0,"r\n\t//}\n "],[1,"   var authInfo = req.getAuthDetails();\n"],[0,"    res."]],"start1":15466,"start2":15466,"length1":16,"length2":56}]],"length":17431,"saved":false}
{"ts":1350666341889,"patch":[[{"diffs":[[0,"hDetails();\n"],[1,"    req.session.oauth = {}\n    req.session.oauth.twitter_oauth_token = authInfo.twitter_oauth_token;\n    req.session.oauth.twitter_oauth_token_secret = authInfo.twitter_oauth_token_secret;\n"],[0,"    res.send"]],"start1":15502,"start2":15502,"length1":24,"length2":213}]],"length":17620,"saved":false}
{"ts":1350666554741,"patch":[[{"diffs":[[0,"uth = {}"],[1,";"],[0,"\n    req"]],"start1":15532,"start2":15532,"length1":16,"length2":17}]],"length":17621,"saved":false}
{"ts":1350666581582,"patch":[[{"diffs":[[0,"s){\n"],[-1,"    //if (req.session.oauth) {\n\t//req.session.oauth.verifier = req.query.oauth_verifier;\n\t//var oauth = req.session.oauth;\n\n\t//oa.getOAuthAccessToken(oauth.token,oauth.token_secret,oauth.verifier, \n\t//function(error, oauth_access_token, oauth_access_token_secret, results){\n\t//\tif (error){\n\t\t\t//console.log(error);\n\t\t\t//res.send(\"yeah something broke.\");\n\t//\t} else {\n\t//\t\treq.session.oauth.access_token = oauth_access_token;\n\t//\t\treq.session.oauth.access_token_secret = oauth_access_token_secret;\n\t\t\t//console.log(results);\n\t\t\t//res.send(\"worked. nice one.\");\n\t//\t}\n\t//}\n\t//);\n\t//} else {\n        //render error\n\t//}\n"],[0,"    "]],"start1":14851,"start2":14851,"length1":626,"length2":8}]],"length":17003,"saved":false}
{"ts":1350666644285,"patch":[[{"diffs":[[0,"\n   "],[-1," //oa.getOAuthRequestToken(function(error, oauth_token, oauth_token_secret, results){\n\t//if (error) {\n\t//\tconsole.log(error);\n\t//\tres.send(\"yeah no. didn't work.\");\n\t//} else {\n\t//\treq.session.oauth = {};\n\t//\treq.session.oauth.token = oauth_token;\n\t\t//console.log('oauth.token: ' + req.session.oauth.token);\n\t//\treq.session.oauth.token_secret = oauth_token_secret;\n\t\t//console.log('oauth.token_secret: ' + req.session.oauth.token_secret);\n\t\t//res.redirect('https://twitter.com/oauth/authenticate?oauth_token='+oauth_token);\n    //}\n\t//});\n    //res.send( JSON.stringify( req.getAuthDetails()) );\n    res.send(\"success\");"],[0,"\n};\n"]],"start1":14179,"start2":14179,"length1":628,"length2":8}]],"length":16383,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350748728099,"patch":[[{"diffs":[[0,"  }\n    });\n};\n\n"],[1,"exports.facebook = function(req, res){\n    \n};\n\n"],[0,"exports.twitters"]],"start1":14120,"start2":14120,"length1":32,"length2":80}]],"length":16431,"saved":false}
{"ts":1350750032788,"patch":[[{"diffs":[[0,"s){\n    "],[1,"res.send( JSON.stringify( req.getAuthDetails()) );"],[0,"\n};\n\nexp"]],"start1":14171,"start2":14171,"length1":16,"length2":66}]],"length":16481,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350951251809,"patch":[[{"diffs":[[0,"tails()) );\n};\n\n"],[1,"exports.signedfb = function(req, res){\n    res.send(JSON.stringify( req.getAuthDetails()) );\n};\n\n"],[0,"exports.twitters"]],"start1":14218,"start2":14218,"length1":32,"length2":129}]],"length":16578,"saved":false}
{"ts":1350951397363,"patch":[[{"diffs":[[0,"end("],[-1,"JSON.stringify( req.getAuthDetails()) "],[1,"\"success\""],[0,");\n}"]],"start1":14282,"start2":14282,"length1":46,"length2":17}]],"length":16549,"saved":false}
{"ts":1350953151829,"patch":[[{"diffs":[[0,", res){\n    res."],[-1,"s"],[0,"end("],[1,"\"<html><h1>Hello Facebook user:\" +"],[0," JSON.stringify("]],"start1":14167,"start2":14167,"length1":37,"length2":70},{"diffs":[[0,"getAuthDetails()"],[1," "],[0,") "],[1,"+ \".</h1></html>\""],[0,");\n};\n\nexports.s"]],"start1":14242,"start2":14242,"length1":34,"length2":52}]],"length":16600,"saved":false}
{"ts":1350953451167,"patch":[[{"diffs":[[0,"res."],[-1,"end(\"<html><h1>Hello Facebook user:\" + JSON.stringify( req.getAuthDetails() ) + \".</h1></html>\""],[1,"redirect('https://www.facebook.com/dialog/apprequests?app_id='+keys.fbId+'&message=Facebook%20Dialogs%20are%20so%20easy!&redirect_uri=http://www.example.com/response'"],[0,");\n}"]],"start1":14179,"start2":14179,"length1":103,"length2":174}]],"length":16671,"saved":false}
{"ts":1350953454753,"patch":[[{"diffs":[[0,"pp_id='+"],[1," "],[0,"keys.fbI"]],"start1":14238,"start2":14238,"length1":16,"length2":17},{"diffs":[[0,"eys.fbId"],[1," "],[0,"+'&messa"]],"start1":14248,"start2":14248,"length1":16,"length2":17}]],"length":16673,"saved":false}
{"ts":1350953621789,"patch":[[{"diffs":[[0,"p://"],[-1,"www.example.com/response"],[1,"holidayreminder.challetwoods.c9.io/facebook"],[0,"');\n"]],"start1":14322,"start2":14322,"length1":32,"length2":51}]],"length":16692,"saved":false}
{"ts":1350953874325,"patch":[[{"diffs":[[0,"A1\"\n);\n\n"],[-1,"/*"],[0,"var fbOa"]],"start1":795,"start2":795,"length1":18,"length2":16},{"diffs":[[0,"SHA1\"\n);"],[-1,"*/"],[0,"\n\nexport"]],"start1":984,"start2":984,"length1":18,"length2":16}]],"length":16688,"saved":false}
{"ts":1350954151073,"patch":[[{"diffs":[[0,"ect("],[-1,"'"],[1,"\""],[0,"https://"],[-1,"www"],[1,"graph"],[0,".fac"]],"start1":14184,"start2":14184,"length1":20,"length2":22},{"diffs":[[0,"com/"],[-1,"dialog/apprequests?app_id='+ keys.fbId +'&message=Facebook%20Dialogs%20are%20so%20easy!&redirect_uri=http://holidayreminder.challetwoods.c9.io/facebook'"],[1,"me/friends\""],[0,");\n}"]],"start1":14212,"start2":14212,"length1":160,"length2":19}]],"length":16549,"saved":false}
{"ts":1350954275157,"patch":[[{"diffs":[[0,"C-SHA1\"\n);\n\n"],[1,"/*"],[0,"var fbOa = n"]],"start1":791,"start2":791,"length1":24,"length2":26},{"diffs":[[0,"SHA1\"\n);"],[1,"*/"],[0,"\n\nexport"]],"start1":986,"start2":986,"length1":16,"length2":18},{"diffs":[[0,"res."],[-1,"redirect(\"https://graph.facebook.com/me/friends\""],[1,"send( JSON.stringify( req.getAuthDetails()) "],[0,");\n}"]],"start1":14179,"start2":14179,"length1":56,"length2":52},{"diffs":[[0,"success\""],[1," "],[0,");\n};\n\ne"]],"start1":14287,"start2":14287,"length1":16,"length2":17}]],"length":16550,"saved":false}
{"ts":1350954458488,"patch":[[{"diffs":[[0,"  re"],[-1,"s.send( JSON.stringify( req.getAuthDetails()) )"],[1,"q.session.oauth = {};\n    req.exports.oauth.facebook_oauth_token = req.session.access_token"],[0,";\n};"]],"start1":14177,"start2":14177,"length1":55,"length2":99}]],"length":16594,"saved":false}
{"ts":1350954469380,"patch":[[{"diffs":[[0,"_token;\n"],[1,"    \n"],[0,"};\n\nexpo"]],"start1":14266,"start2":14266,"length1":16,"length2":21}]],"length":16599,"saved":false}
{"ts":1350954734084,"patch":[[{"diffs":[[0,"en;\n    "],[1,"http.server.request(options, function(res){\n        req.end(JSON.stringify(res));\n    });"],[0,"\n};\n\nexp"]],"start1":14270,"start2":14270,"length1":16,"length2":105}]],"length":16688,"saved":false}
{"ts":1350954779500,"patch":[[{"diffs":[[0,"cess_token;\n"],[1,"    var options = {\n        host: \"www.facebook.com\",\n        path: \"/me/friends,\n        method: 'GET'\n    };\n"],[0,"    http.ser"]],"start1":14262,"start2":14262,"length1":24,"length2":135}]],"length":16799,"saved":false}
{"ts":1350954807252,"patch":[[{"diffs":[[0,"/friends"],[1,"\""],[0,",\n      "]],"start1":14346,"start2":14346,"length1":16,"length2":17}]],"length":16800,"saved":false}
{"ts":1350954882842,"patch":[[{"diffs":[[0,"/friends"],[1,"?access_token=\" + req.session.access_token + \""],[0,"\",\n     "]],"start1":14346,"start2":14346,"length1":16,"length2":62}]],"length":16846,"saved":false}
{"ts":1350954931469,"patch":[[{"diffs":[[0,"    req."],[-1,"exports"],[1,"session"],[0,".oauth.f"]],"start1":14203,"start2":14203,"length1":23,"length2":23}]],"length":16846,"saved":false}
{"ts":1350955026233,"patch":[[{"diffs":[[0,"(res));\n    });\n"],[1,"    req.write();\n    req.end();\n"],[0,"};\n\nexports.sign"]],"start1":14510,"start2":14510,"length1":32,"length2":64}]],"length":16878,"saved":false}
{"ts":1350958845570,"patch":[[{"diffs":[[0,"  };\n   "],[1," var fbreq ="],[0," http.se"]],"start1":14427,"start2":14427,"length1":16,"length2":28},{"diffs":[[0,"tion(res"],[1,"ponse"],[0,"){\n     "]],"start1":14481,"start2":14481,"length1":16,"length2":21},{"diffs":[[0,"gify(res"],[1,"ponse"],[0,"));\n    "]],"start1":14523,"start2":14523,"length1":16,"length2":21},{"diffs":[[0,"    });\n    "],[1,"fb"],[0,"req.write();"]],"start1":14540,"start2":14540,"length1":24,"length2":26},{"diffs":[[0,"rite();\n    "],[1,"fb"],[0,"req.end();\n}"]],"start1":14559,"start2":14559,"length1":24,"length2":26}]],"length":16904,"saved":false}
{"ts":1350958900610,"patch":[[{"diffs":[[0,"q.write("],[1,"''"],[0,");\n    f"]],"start1":14556,"start2":14556,"length1":16,"length2":18},{"diffs":[[0,"  fbreq.end("],[1,"''"],[0,");\n};\n\nexpor"]],"start1":14571,"start2":14571,"length1":24,"length2":26}]],"length":16908,"saved":false}
{"ts":1350958949194,"patch":[[{"diffs":[[0,"(req, res){\n"],[1,"    var output = '';\n"],[0,"    req.sess"]],"start1":14163,"start2":14163,"length1":24,"length2":45},{"diffs":[[0,"  re"],[-1,"q.end(JSON.stringify(response)"],[1,"sponse.on('data', function (chunk) {\n            //res.json(chunk);\n            output += chunk;\n        });\n        \n        response.on('end', function(){\n            var data = JSON.parse(output);\n            res.json(data); \n        }"],[0,");\n "]],"start1":14524,"start2":14524,"length1":38,"length2":246}]],"length":17137,"saved":false}
{"ts":1350958956146,"patch":[[{"diffs":[[0,"req.end("],[-1,"''"],[0,");\n};\n\ne"]],"start1":14804,"start2":14804,"length1":18,"length2":16}]],"length":17135,"saved":false}
{"ts":1350959043737,"patch":[[{"diffs":[[0," data = "],[-1,"JSON.parse("],[0,"output"],[-1,")"],[0,";\n      "]],"start1":14700,"start2":14700,"length1":34,"length2":22}]],"length":17123,"saved":false}
{"ts":1350959095683,"patch":[[{"diffs":[[0,"            res."],[-1,"json"],[1,"write"],[0,"(data); \n       "]],"start1":14716,"start2":14716,"length1":36,"length2":37}]],"length":17124,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351267811514,"patch":[[{"diffs":[[0,"    "],[-1,"res.write(data); "],[1,"if(data){\n                res.write(data);\n            } else {\n                res.write('');\n            }"],[0,"\n   "]],"start1":14724,"start2":14724,"length1":25,"length2":116}]],"length":17215,"saved":false}
{"ts":1351267886366,"patch":[[{"diffs":[[0,"tion(response){\n"],[1,"        response.setEncoding('utf8');\n"],[0,"        response"]],"start1":14502,"start2":14502,"length1":32,"length2":70}]],"length":17253,"saved":false}
{"ts":1351267962162,"patch":[[{"diffs":[[0,"});\n    });\n"],[1,"    \n    fbreq.on('error', function(e) {\n        console.log('problem with request: ' + e.message);\n    });\n"],[0,"    fbreq.wr"]],"start1":14883,"start2":14883,"length1":24,"length2":132}]],"length":17361,"saved":false}
{"ts":1351268162696,"patch":[[{"diffs":[[0,"t: \""],[-1,"www"],[1,"graph"],[0,".fac"]],"start1":14326,"start2":14326,"length1":11,"length2":13}]],"length":17363,"saved":false}
{"ts":1351268587545,"patch":[[{"diffs":[[0,"('../app');\n"],[1," var https = require('https');\n"],[0," var mongo ="]],"start1":77,"start2":77,"length1":24,"length2":55}]],"length":17394,"saved":false}
{"ts":1351268687234,"patch":[[{"diffs":[[0,"t = '';\n"],[1,"    https.ccreateServer().listen(8081);\n"],[0,"    req."]],"start1":14219,"start2":14219,"length1":16,"length2":56}]],"length":17434,"saved":false}
{"ts":1351268693691,"patch":[[{"diffs":[[0,"  https."],[-1,"c"],[0,"createSe"]],"start1":14229,"start2":14229,"length1":17,"length2":16}]],"length":17433,"saved":false}
{"ts":1351268706765,"patch":[[{"diffs":[[0,"var fbreq = http"],[1,"s"],[0,".server.request("]],"start1":14529,"start2":14529,"length1":32,"length2":33}]],"length":17434,"saved":false}
{"ts":1351269069153,"patch":[[{"diffs":[[0,"    "],[-1,"var fbreq = https.server.request("],[1,"https.get(options.host + "],[0,"options"],[1,".path"],[0,", fu"]],"start1":14525,"start2":14525,"length1":48,"length2":45}]],"length":17431,"saved":false}
{"ts":1351269092507,"patch":[[{"diffs":[[0,"  })"],[-1,";\n    \n    fbreq"],[0,".on("]],"start1":14959,"start2":14959,"length1":24,"length2":8},{"diffs":[[0,"    });\n    "],[1,"//"],[0,"fbreq.write("]],"start1":15049,"start2":15049,"length1":24,"length2":26},{"diffs":[[0,"');\n    "],[1,"//"],[0,"fbreq.en"]],"start1":15076,"start2":15076,"length1":16,"length2":18}]],"length":17419,"saved":false}
{"ts":1351269103950,"patch":[[{"diffs":[[0,"tps.get("],[1,"'https://' + "],[0,"options."]],"start1":14531,"start2":14531,"length1":16,"length2":29}]],"length":17432,"saved":false}
{"ts":1351269173763,"patch":[[{"diffs":[[0,"'';\n"],[-1,"    https.createServer().listen(8081);\n"],[0,"    "]],"start1":14223,"start2":14223,"length1":47,"length2":8}]],"length":17393,"saved":false}
{"ts":1351269571162,"patch":[[{"diffs":[[0,"t = '';\n"],[1,"    https.createServer().listen(8081);\n"],[0,"    req."]],"start1":14219,"start2":14219,"length1":16,"length2":55},{"diffs":[[0,"ion.oauth = {};\n"],[-1,""],[0,"    req.session."]],"start1":14278,"start2":14278,"length1":32,"length2":32},{"diffs":[[0,"    "],[-1,"https.get('https://' + options.host + options.path"],[1,"var fbreq = https.request(options"],[0,", fu"]],"start1":14525,"start2":14525,"length1":58,"length2":41},{"diffs":[[0,";\n    })"],[1,";\n    \n    fbreq"],[0,".on('err"]],"start1":14951,"start2":14951,"length1":16,"length2":32},{"diffs":[[0,"    });\n    "],[-1,"//"],[0,"fbreq.write("]],"start1":15061,"start2":15061,"length1":26,"length2":24},{"diffs":[[0,"');\n    "],[-1,"//"],[0,"fbreq.en"]],"start1":15086,"start2":15086,"length1":18,"length2":16}]],"length":17427,"saved":false}
{"ts":1351269608113,"patch":[[{"diffs":[[0,"    "],[-1,"https.createServer().listen(8081);"],[0,"\n   "]],"start1":14227,"start2":14227,"length1":42,"length2":8}]],"length":17393,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351467353507,"patch":[[{"diffs":[[0,"GET'\n    };\n"],[1,"    /*************** page ****************/\n    var authInfo = req.getAuthDetails();\n    var username = authInfo.username;\n    var password = 'fb_user';\n    var email = authInfo.email;\n    var friends = req.body.friends;\n    var data = {\n      username: username,\n      email: email,\n      pass: password\n    };\n    conn.collection('users').findOne({email: email}, function(err, user){\n        if(!err){\n            if(user){\n                req.session.user = user;\n                conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                    if(!err && users){\n                        req.session.friends = users;\n                        req.session.auth = true;\n                        res.json([\"OK\"]);\n                    } else {\n                        //res.json([]);\n                    }\n                });\n            } else {\n                conn.collection('users').save(data, function(err, user){\n                    if(!err && user){\n                        req.session.user = user;\n                        conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                            if(!err && users){\n                                req.session.friends = users;\n                                res.json([\"OK\"]);\n                            } else {\n                                //res.json([]);\n                            }\n                        });\n                    } else {\n                        //err saving\n                    }\n                });\n            }\n        } else {\n            //err on lookup\n        }\n    });\n    /*************** page ****************/\n"],[0,"    var fbre"]],"start1":14479,"start2":14479,"length1":24,"length2":1704},{"diffs":[[0,"es.write(data);\n"],[1,"                res.end();\n"],[0,"            } el"]],"start1":16505,"start2":16505,"length1":32,"length2":59}]],"length":19100,"saved":false}
{"ts":1351467476129,"patch":[[{"diffs":[[0,"riends;\n    "],[-1,"var data = {\n"],[1,"\n    /*************** page ****************/\n    var fbreq = https.request(options, function(response){\n        response.setEncoding('utf8');\n        response.on('data', function (chunk) {\n            //res.json(chunk);\n            output += chunk;\n        });\n        \n        response.on('end', function(){\n            var data = output;\n            if(data){\n                /**** new *****/\n                var data = {\n            "],[0,"      userna"]],"start1":14704,"start2":14704,"length1":37,"length2":460},{"diffs":[[0,"name: username,\n"],[1,"            "],[0,"      email: ema"]],"start1":15162,"start2":15162,"length1":32,"length2":44},{"diffs":[[0,"  email: email,\n"],[1,"            "],[0,"      pass: pass"]],"start1":15194,"start2":15194,"length1":32,"length2":44},{"diffs":[[0,"s: password\n    "],[-1,"};\n"],[1,"            };\n            "],[0,"    conn.collect"]],"start1":15231,"start2":15231,"length1":35,"length2":59},{"diffs":[[0,"ion(err, user){\n"],[1,"            "],[0,"        if(!err)"]],"start1":15332,"start2":15332,"length1":32,"length2":44},{"diffs":[[0,"r){\n            "],[1,"       "],[1,"     "],[0,"if(user){\n      "]],"start1":15374,"start2":15374,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"   "],[1,"         "],[0,"req.session.user"]],"start1":15412,"start2":15412,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"        "],[1,"    "],[0,"conn.collection("]],"start1":15465,"start2":15465,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"            "],[0,"if(!err && users"]],"start1":15581,"start2":15581,"length1":32,"length2":44},{"diffs":[[0,"                "],[1," "],[1,"           "],[0,"req.session.frie"]],"start1":15636,"start2":15636,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"      "],[1,"      "],[0,"req.session.auth"]],"start1":15701,"start2":15701,"length1":32,"length2":44},{"diffs":[[0,"on.auth = true;\n"],[1,"            "],[0,"                "]],"start1":15738,"start2":15738,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"            "],[0,"} else {\n       "]],"start1":15812,"start2":15812,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"     "],[1,"       "],[0,"//res.json([]);\n"]],"start1":15857,"start2":15857,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"          "],[-1,"}\n"],[1,"  }\n            "],[0,"                "]],"start1":15905,"start2":15905,"length1":34,"length2":58},{"diffs":[[0,"            "],[1,"   "],[-1,"} else {\n"],[1,"         } else {\n            "],[0,"            "]],"start1":15967,"start2":15967,"length1":33,"length2":57},{"diffs":[[0,"                "],[1,"            "],[0,"if(!err && user)"]],"start1":16089,"start2":16089,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"  "],[1,"          "],[0,"req.session.user"]],"start1":16143,"start2":16143,"length1":32,"length2":44},{"diffs":[[0,"on.user = user;\n"],[1,"            "],[0,"                "]],"start1":16180,"start2":16180,"length1":32,"length2":44},{"diffs":[[0,"on(err, users){\n"],[1,"            "],[0,"                "]],"start1":16300,"start2":16300,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"            "],[0,"req.session.frie"]],"start1":16391,"start2":16391,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"            "],[0,"res.json([\"OK\"])"]],"start1":16464,"start2":16464,"length1":32,"length2":44},{"diffs":[[0,"                "],[1,"           "],[1," "],[0,"} else {\n       "]],"start1":16522,"start2":16522,"length1":32,"length2":44},{"diffs":[[0,"       } else {\n"],[1,"            "],[0,"                "]],"start1":16543,"start2":16543,"length1":32,"length2":44},{"diffs":[[0,"                "],[-1,"}\n"],[1,"            }\n         "],[0,"                "]],"start1":16631,"start2":16631,"length1":34,"length2":55},{"diffs":[[0,"                "],[1,"   "],[0,"});\n"],[1,"            "],[0,"                "]],"start1":16678,"start2":16678,"length1":36,"length2":51},{"diffs":[[0,"                "],[1,"  "],[1,"          "],[0,"//err saving\n   "]],"start1":16750,"start2":16750,"length1":32,"length2":44},{"diffs":[[0,"                "],[-1,"    }\n"],[0,"                "]],"start1":16791,"start2":16791,"length1":38,"length2":32},{"diffs":[[0,"               }"],[-1,");\n"],[1,"\n    "],[0,"            }\n  "]],"start1":16808,"start2":16808,"length1":35,"length2":37},{"diffs":[[0,"        "],[-1,"}\n"],[0,"        "],[-1,"} else {"],[1,"    });"],[0,"\n       "]],"start1":16833,"start2":16833,"length1":34,"length2":31},{"diffs":[[0,"    "],[-1,"//err on lookup\n        }\n    });\n    /*************** page ****************/\n    var fbreq = https.request(options, function(response){\n        response.setEncoding('utf8');\n        response.on('data', function (chunk) {\n            //res.json(chunk);\n            output += chunk;\n"],[1,"            }\n                    } else {\n                        //err on lookup\n            "],[0,"    "]],"start1":16865,"start2":16865,"length1":290,"length2":103},{"diffs":[[0,"               }"],[-1,");"],[0,"\n        \n      "]],"start1":16957,"start2":16957,"length1":34,"length2":32},{"diffs":[[0,"    "],[-1,"\n"],[0,"        "],[-1,"response.on('end', function(){\n            var data = output;\n            if(data){"],[1,"});\n                /**** end ****/"],[0,"\n   "]],"start1":16978,"start2":16978,"length1":100,"length2":51}]],"length":19638,"saved":false}
{"ts":1351467597643,"patch":[[{"diffs":[[0," };\n"],[-1,"    /*************** page ****************/\n    var authInfo = req.getAuthDetails();\n    var username = authInfo.username;\n    var password = 'fb_user';\n    var email = authInfo.email;\n    var friends = req.body.friends;\n    \n    /*************** page ****************/\n"],[0,"    "]],"start1":14487,"start2":14487,"length1":278,"length2":8},{"diffs":[[0,"a){\n"],[-1,"                /**** new *****/\n                var data = {\n                  username: username,\n                  email: email,\n                  pass: password\n                };\n                conn.collection('users').findOne({email: email}, function(err, user){\n                    if(!err){\n                        if(user){\n                            req.session.user = user;\n                            conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                                if(!err && users){\n                                    req.session.friends = users;\n                                    req.session.auth = true;\n                                    res.json([\"OK\"]);\n                                } else {\n                                    //res.json([]);\n                                }\n                            });\n                        } else {\n                            conn.collection('users').save(data, function(err, user){\n                                if(!err && user){\n                                    req.session.user = user;\n                                    conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                                        if(!err && users){\n                                            req.session.friends = users;\n                                            res.json([\"OK\"]);\n                                        } else {\n                                            //res.json([]);\n                                        }\n                                    });\n                                } else {\n                                    //err saving\n                                }\n                            });\n                        }\n                    } else {\n                        //err on lookup\n                    }\n                });\n                /**** end ****/\n"],[0,"    "]],"start1":14804,"start2":14804,"length1":1956,"length2":8}]],"length":17420,"saved":false}
{"ts":1351467827765,"patch":[[{"diffs":[[0,"(data){\n"],[1,"                /**** new ****/\n                conn.collection('users').findOne({username: email, pass: password}, function(err, user){ \n                        existingUser = user;\n                        if(existingUser){\n                            req.session.user = user;\n                            req.session.username = email;\n                            req.session.userId = existingUser._id;\n                            req.session.auth = true;\n                            res.json(['OK']);\n                            return;\n                        }\n                        res.json([]);\n                        //console.log(user);\n                });\n                /**** end ****/\n"],[0,"        "]],"start1":14800,"start2":14800,"length1":16,"length2":715}]],"length":18119,"saved":false}
{"ts":1351468001769,"patch":[[{"diffs":[[0,"a){\n"],[-1,"                /**** new ****/\n                conn.collection('users').findOne({username: email, pass: password}, function(err, user){ \n                        existingUser = user;\n                        if(existingUser){\n                            req.session.user = user;\n                            req.session.username = email;\n                            req.session.userId = existingUser._id;\n                            req.session.auth = true;\n                            res.json(['OK']);\n                            return;\n                        }\n                        res.json([]);\n                        //console.log(user);\n                });\n                /**** end ****/\n"],[0,"    "]],"start1":14804,"start2":14804,"length1":707,"length2":8}]],"length":17420,"saved":false}
{"ts":1351468046011,"patch":[[{"diffs":[[0,"(data){\n"],[1,"                /**** new ****/\n                conn.collection('users').findOne({email: email}, function(err, user){\n                    if(!err){\n                        if(user){\n                            req.session.user = user;\n                            conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                                if(!err && users){\n                                    req.session.friends = users;\n                                    req.session.auth = true;\n                                    res.json([\"OK\"]);\n                                } else {\n                                    //res.json([]);\n                                }\n                            });\n                        } else {\n                            conn.collection('users').save(data, function(err, user){\n                                if(!err && user){\n                                    req.session.user = user;\n                                    conn.collection('users').find({fbId: {$in: friends}}).toArray(function(err, users){\n                                        if(!err && users){\n                                            req.session.friends = users;\n                                            res.json([\"OK\"]);\n                                        } else {\n                                            //res.json([]);\n                                        }\n                                    });\n                                } else {\n                                    //err saving\n                                }\n                            });\n                        }\n                    } else {\n                        //err on lookup\n                    }\n                });\n                /**** end ****/\n"],[0,"        "]],"start1":14800,"start2":14800,"length1":16,"length2":1812}]],"length":19216,"saved":false}
{"ts":1351468062425,"patch":[[{"diffs":[[0,"t = '';\n    "],[1,"var authInfo = req.getAuthDetails();"],[0,"\n    req.ses"]],"start1":14219,"start2":14219,"length1":24,"length2":60}]],"length":19252,"saved":false}
{"ts":1351468093115,"patch":[[{"diffs":[[0,"findOne({email: "],[1,"authInfo."],[0,"email}, function"]],"start1":14917,"start2":14917,"length1":32,"length2":41}]],"length":19261,"saved":false}
{"ts":1351468168039,"patch":[[{"diffs":[[0,"output;\n"],[1,"            var userData = {\n              username: authInfo.username,\n              email: authInfo.email,\n              pass: 'fb_user'\n            };\n"],[0,"        "]],"start1":14814,"start2":14814,"length1":16,"length2":170}]],"length":19415,"saved":false}
{"ts":1351468183337,"patch":[[{"diffs":[[0,"One({email: "],[-1,"authInfo"],[1,"userData"],[0,".email}, fun"]],"start1":15075,"start2":15075,"length1":32,"length2":32},{"diffs":[[0,"                "],[1,"//"],[0,"res.json([\"OK\"])"]],"start1":15551,"start2":15551,"length1":32,"length2":34}]],"length":19417,"saved":false}
{"ts":1351468191083,"patch":[[{"diffs":[[0,"n('users').save("],[-1,"d"],[1,"userD"],[0,"ata, function(er"]],"start1":15821,"start2":15821,"length1":33,"length2":37}]],"length":19421,"saved":false}
{"ts":1351468196752,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"res.json([\"OK\"])"]],"start1":16259,"start2":16259,"length1":32,"length2":34}]],"length":19423,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351480224863,"patch":[[{"diffs":[[0,"t = '';\n"],[1,"    var friends = [];\n"],[0,"    var "]],"start1":14219,"start2":14219,"length1":16,"length2":38},{"diffs":[[0,"tAuthDetails();\n"],[-1,""],[0,"    req.session."]],"start1":14274,"start2":14274,"length1":32,"length2":32},{"diffs":[[0,"* new ****/\n"],[1,"                for(var friend in data){\n                    friends.push(data[friend].id);\n                }\n"],[0,"            "]],"start1":15040,"start2":15040,"length1":24,"length2":134},{"diffs":[[0,"        "],[-1,"//"],[0,"res."],[-1,"json([\"OK\"]"],[1,"redirect(\"/dashboard\""],[0,");\n     "]],"start1":15691,"start2":15691,"length1":33,"length2":41},{"diffs":[[0,"    "],[-1,"//"],[0,"res."],[-1,"json([\"OK\"]"],[1,"redirect(\"/dashboard\""],[0,");\n "]],"start1":16411,"start2":16411,"length1":25,"length2":33},{"diffs":[[0,"                "],[1,"//"],[0,"res.write(data);"]],"start1":16959,"start2":16959,"length1":32,"length2":34},{"diffs":[[0,"            "],[1,"//"],[0,"res.end();\n "]],"start1":16998,"start2":16998,"length1":24,"length2":26}]],"length":19575,"saved":false}
{"ts":1351480465247,"patch":[[{"diffs":[[0,"uthInfo.user"],[1,".first_name + \" \" + authInfo.user.last_"],[0,"name,\n      "]],"start1":14898,"start2":14898,"length1":24,"length2":63},{"diffs":[[0,"uthInfo."],[1,"user."],[0,"email,\n "]],"start1":14977,"start2":14977,"length1":16,"length2":21}]],"length":19619,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352494314165,"patch":[[{"diffs":[[0,"      if(!err){\n"],[1,"                        trace(user._id);\n"],[0,"                "]],"start1":15315,"start2":15315,"length1":32,"length2":73}]],"length":19660,"saved":false}
{"ts":1352494330201,"patch":[[{"diffs":[[0,"    "],[-1,"trace"],[1,"console.log"],[0,"(use"]],"start1":15351,"start2":15351,"length1":13,"length2":19}]],"length":19666,"saved":false}
{"ts":1352494482030,"patch":[[{"diffs":[[0,"tAuthDetails();\n"],[1,"    req.session.user = {};\n"],[0,"    req.session."]],"start1":14274,"start2":14274,"length1":32,"length2":59}]],"length":19693,"saved":false}
{"ts":1352494569166,"patch":[[{"diffs":[[0,"(user._id);\n"],[1,"                        console.log(req.session);\n"],[0,"            "]],"start1":15393,"start2":15393,"length1":24,"length2":74}]],"length":19743,"saved":false}
{"ts":1352494674565,"patch":[[{"diffs":[[0,".session.auth){\n"],[1,"        console.log(req.session);\n"],[0,"        userId ="]],"start1":1279,"start2":1279,"length1":32,"length2":66}]],"length":19777,"saved":false}
{"ts":1352495267436,"patch":[[{"diffs":[[0,".write('');\n"],[1,"    req.session = null;\n"],[0,"    fbreq.en"]],"start1":17428,"start2":17428,"length1":24,"length2":48}]],"length":19801,"saved":false}
{"ts":1352495353336,"patch":[[{"diffs":[[0,"');\n"],[-1,"    req.session = null;\n"],[0,"    "]],"start1":17436,"start2":17436,"length1":32,"length2":8}]],"length":19777,"saved":false}
{"ts":1352495590647,"patch":[[{"diffs":[[0,"g(req.session);\n"],[1,"                        console.log(\"req.sessionID \"  + req.sessionID);\n"],[0,"                "]],"start1":15473,"start2":15473,"length1":32,"length2":104}]],"length":19849,"saved":false}
{"ts":1352495604071,"patch":[[{"diffs":[[0,"g(req.session);\n"],[1,"        console.log(\"req.sessionID \"  + req.sessionID);\n"],[0,"        userId ="]],"start1":1313,"start2":1313,"length1":32,"length2":88}]],"length":19905,"saved":false}
{"ts":1352496010718,"patch":[[{"diffs":[[0,"on.auth = true;\n"],[1,"                                    req.session.cookie.expires = false;\n"],[0,"                "]],"start1":15977,"start2":15977,"length1":32,"length2":104}]],"length":19977,"saved":false}
{"ts":1352496810988,"patch":[[{"diffs":[[0,"                "],[1,"return "],[0,"res.redirect(\"/d"]],"start1":16085,"start2":16085,"length1":32,"length2":39}]],"length":19984,"saved":false}
{"ts":1352496977939,"patch":[[{"diffs":[[0,"ion."],[-1,"cookie.expires = false;"],[1,"save("],[0,"\n   "]],"start1":16037,"start2":16037,"length1":31,"length2":13}]],"length":19966,"saved":false}
{"ts":1352496982115,"patch":[[{"diffs":[[0,"    "],[-1,"return "],[0,"res."]],"start1":16079,"start2":16079,"length1":15,"length2":8}]],"length":19959,"saved":false}
{"ts":1352497019774,"patch":[[{"diffs":[[0,"on.save("],[1,");"],[0,"\n       "]],"start1":16038,"start2":16038,"length1":16,"length2":18}]],"length":19961,"saved":false}
{"ts":1352497407201,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"console.log(user"]],"start1":15456,"start2":15456,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(req."]],"start1":15505,"start2":15505,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"req"]],"start1":15557,"start2":15557,"length1":32,"length2":34}]],"length":19967,"saved":false}
{"ts":1352497423042,"patch":[[{"diffs":[[0,"    "],[-1,"req.session.save();"],[0,"\n   "]],"start1":16031,"start2":16031,"length1":27,"length2":8},{"diffs":[[0,"    "],[-1,"res.redirect(\"/dashboard\""],[1,"dashboard(req, res"],[0,");\n "]],"start1":16068,"start2":16068,"length1":33,"length2":26}]],"length":19941,"saved":false}
{"ts":1352497447421,"patch":[[{"diffs":[[0,"        "],[1,"exports."],[0,"dashboar"]],"start1":16064,"start2":16064,"length1":16,"length2":24},{"diffs":[[0,"    "],[-1,"res.redirect(\"/dashboard\""],[1,"exports.dashboard(req, res"],[0,");\n "]],"start1":16785,"start2":16785,"length1":33,"length2":34}]],"length":19950,"saved":false}
{"ts":1352497451358,"patch":[[{"diffs":[[0,"ue;\n"],[-1,"                                    \n"],[0,"    "]],"start1":15995,"start2":15995,"length1":45,"length2":8}]],"length":19913,"saved":false}
