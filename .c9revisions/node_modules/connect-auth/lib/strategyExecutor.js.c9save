{"ts":1352491923510,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*!\n * Copyright(c) 2010 Ciaran Jessup <ciaranj@gmai.com>\n * MIT Licensed\n */\nvar  AuthExecutionScope= require('./authExecutionScope')\n   , util= require('util');\n\nmodule.exports= function(strategies) {\n  this.strategies= {};\n  for(var i=0; i<strategies.length; i++) {\n    this.strategies[strategies[i].name] = strategies[i];\n  }\n};\n\nmodule.exports.prototype.authenticate= function(strategies, authContext, callback) {\n  var executionScope= new AuthExecutionScope( authContext );\n  if( !this.strategies || this.strategies.length ==0 ) {\n    executionScope.trace( \"Unable to find a strategy to authenticate with\", \"###\");\n    callback( null, executionScope.executionResult );\n  }\n  else {\n    var strategiesToTest= [];\n    var carryOn= false;\n    try{\n      // Find the set of configured strategies (this.strategies) that match those requested for this call to\n      // authenticate (strategies)\n      for(var i =0 ;i < strategies.length; i++ ) {\n        if( this.strategies[ strategies[i] ] ) {\n          strategiesToTest[strategiesToTest.length]= this.strategies[ strategies[i] ];\n        }\n      }\n      carryOn= true;\n    }\n    catch(e) {  \n      executionScope.trace( \"Error choosing strategy: \"+ e.stack, \"###\");\n      callback(e);\n    }\n    if( carryOn ) {\n      if( strategiesToTest.length  == 0 ) {\n        executionScope.trace( \"Tested all strategies :\" + util.inspect(executionScope.executionResult), \"###\");\n        callback( null, executionScope.executionResult );\n      }\n      else {\n        var total= strategiesToTest.length;\n        var complete= 0;\n        var strategy;\n\n       //todo: error handling urghhh\n       //todo: scope!\n       ;(function next(e) {\n          if (executionScope.executionResult.halted || e || complete === total) {\n            executionScope.trace( \"Tested all strategies\", \"###\");\n            callback(e, executionScope.executionResult)\n          }\n          else {\n            strategy= strategiesToTest[complete++];\n            if( strategy.isValid === undefined || strategy.isValid() ) {  \n              executionScope.executionResult.currentStrategy= strategy.name;\n              executionScope.trace( \"Attempting authentication with: \" + strategy.name, \"###\" );\n              strategy.authenticate.call(executionScope, authContext.request, authContext.response, next);\n            }\n            else {\n              next();\n            }\n          }\n        })()\n      }\n    }\n  }\n};"]],"start1":0,"start2":0,"length1":0,"length2":2433}]],"length":2433}
